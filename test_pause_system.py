#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–∞—É–∑ /–ø–∞—É–∑–∞ –∏ /—Å—Ç–æ–ø_–ø–∞—É–∑–∞
"""

import sys
import os
import logging
import datetime
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
from models import UserData, ShiftData
from state import chat_data

def test_pause_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ø–∞—É–∑."""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–∞—É–∑...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_chat_id = -1001234567890
        test_user_id = 123456789
        test_username = "@test_user"
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = UserData(
            user_id=test_user_id,
            username=test_username,
            role="–∫–∞—Ä–∞–æ–∫–µ_–≤–µ–¥—É—â–∏–π"
        )
        
        # –°–æ–∑–¥–∞–µ–º —Å–º–µ–Ω—É
        shift_data = ShiftData()
        shift_data.main_id = test_user_id
        shift_data.main_username = test_username
        shift_data.users[test_user_id] = user_data
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        chat_data[test_chat_id] = shift_data
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        assert not user_data.on_pause, "–ü–∞—É–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ"
        assert user_data.pause_start_time is None, "–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø–∞—É–∑—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å None"
        assert user_data.pause_end_time is None, "–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–∞—É–∑—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å None"
        print("‚úÖ –¢–µ—Å—Ç 1: –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –¢–µ—Å—Ç 2: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–∞—É–∑—ã
        now_moscow = datetime.datetime.now(pytz.timezone('Europe/Moscow'))
        user_data.on_pause = True
        user_data.pause_start_time = now_moscow.isoformat()
        user_data.pause_end_time = (now_moscow + datetime.timedelta(minutes=40)).isoformat()
        
        assert user_data.on_pause, "–ü–∞—É–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞"
        assert user_data.pause_start_time is not None, "–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø–∞—É–∑—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        assert user_data.pause_end_time is not None, "–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–∞—É–∑—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        print("‚úÖ –¢–µ—Å—Ç 2: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–∞—É–∑—ã —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
        pause_start = datetime.datetime.fromisoformat(user_data.pause_start_time)
        elapsed = (now_moscow - pause_start).total_seconds() / 60
        remaining = max(0, 40 - elapsed)
        
        assert remaining <= 40, "–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 40 –º–∏–Ω—É—Ç"
        assert remaining >= 0, "–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º"
        print(f"‚úÖ –¢–µ—Å—Ç 3: –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω (–æ—Å—Ç–∞–ª–æ—Å—å {remaining:.1f} –º–∏–Ω)")
        
        # –¢–µ—Å—Ç 4: –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–∞—É–∑—ã
        user_data.on_pause = False
        user_data.pause_end_time = now_moscow.isoformat()
        
        assert not user_data.on_pause, "–ü–∞—É–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞"
        print("‚úÖ –¢–µ—Å—Ç 4: –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–∞—É–∑—ã —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–µ—Ä–µ—Ä—ã–≤–∞–º–∏
        user_data.on_break = True
        user_data.on_pause = True
        user_data.pause_start_time = now_moscow.isoformat()
        
        # –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–∞—É–∑—ã, –ø–µ—Ä–µ—Ä—ã–≤ –¥–æ–ª–∂–µ–Ω –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
        if user_data.on_pause:
            user_data.on_break = False
            
        assert not user_data.on_break, "–ü–µ—Ä–µ—Ä—ã–≤ –¥–æ–ª–∂–µ–Ω –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–∞—É–∑—ã"
        assert user_data.on_pause, "–ü–∞—É–∑–∞ –¥–æ–ª–∂–Ω–∞ –æ—Å—Ç–∞—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π"
        print("‚úÖ –¢–µ—Å—Ç 5: –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–µ—Ä–µ—Ä—ã–≤–∞–º–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∞—É–∑—ã
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∏—Å—Ç–µ–∫—à—É—é –ø–∞—É–∑—É
        past_time = now_moscow - datetime.timedelta(minutes=45)
        user_data.pause_start_time = past_time.isoformat()
        
        pause_start = datetime.datetime.fromisoformat(user_data.pause_start_time)
        elapsed = (now_moscow - pause_start).total_seconds() / 60
        remaining = max(0, 40 - elapsed)
        
        if remaining <= 0:
            user_data.on_pause = False
            user_data.pause_end_time = now_moscow.isoformat()
            
        assert not user_data.on_pause, "–ò—Å—Ç–µ–∫—à–∞—è –ø–∞—É–∑–∞ –¥–æ–ª–∂–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è"
        assert remaining == 0, "–û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0 –¥–ª—è –∏—Å—Ç–µ–∫—à–µ–π –ø–∞—É–∑—ã"
        print("‚úÖ –¢–µ—Å—Ç 6: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–∞—É–∑—ã —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç 7: –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–∞—É–∑—É
        user_data.on_pause = True
        user_data.pause_start_time = now_moscow.isoformat()
        user_data.pause_end_time = (now_moscow + datetime.timedelta(minutes=40)).isoformat()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        if user_data.on_pause:
            pause_start = datetime.datetime.fromisoformat(user_data.pause_start_time)
            elapsed = (now_moscow - pause_start).total_seconds() / 60
            remaining = max(0, 40 - elapsed)
            
            if remaining > 0:
                # –ì–æ–ª–æ—Å–æ–≤–æ–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–∞—É–∑—É
                user_data.on_pause = False
                user_data.pause_end_time = now_moscow.isoformat()
                
        assert not user_data.on_pause, "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å –ø–∞—É–∑—É"
        print("‚úÖ –¢–µ—Å—Ç 7: –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–∞—É–∑—É")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–∞—É–∑ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–∞—É–∑: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞—É–∑...")
    success = test_pause_system()
    if success:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –ø–∞—É–∑")
        sys.exit(1)
