# roles.py
"""
–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–æ–ª–µ–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ä–∞–æ–∫–µ
"""

from enum import Enum
from typing import Dict, List
import datetime

class UserRole(Enum):
    """–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    KARAOKE_HOST = "–∫–∞—Ä–∞–æ–∫–µ_–≤–µ–¥—É—â–∏–π"
    MC = "–ú–°"
    
class DayType(Enum):
    """–¢–∏–ø—ã –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏"""
    WEEKDAY = "–±—É–¥–Ω–∏–π"  # –≤—Å-—á—Ç
    WEEKEND = "–≤—ã—Ö–æ–¥–Ω–æ–π"  # –ø—Ç-—Å–±

# –ú–∞–ø–ø–∏–Ω–≥ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ (0=–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 6=–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) –Ω–∞ —Ç–∏–ø –¥–Ω—è
DAY_TYPE_MAPPING = {
    0: DayType.WEEKDAY,  # –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    1: DayType.WEEKDAY,  # –≤—Ç–æ—Ä–Ω–∏–∫
    2: DayType.WEEKDAY,  # —Å—Ä–µ–¥–∞
    3: DayType.WEEKDAY,  # —á–µ—Ç–≤–µ—Ä–≥
    4: DayType.WEEKEND,  # –ø—è—Ç–Ω–∏—Ü–∞
    5: DayType.WEEKEND,  # —Å—É–±–±–æ—Ç–∞
    6: DayType.WEEKDAY,  # –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
}

# –î–µ—Ñ–æ–ª—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–æ–ª–µ–π –ø–æ —Ç–∏–ø–∞–º –¥–Ω–µ–π
DEFAULT_ROLE_CONFIG = {
    DayType.WEEKDAY: {
        "roles": [UserRole.KARAOKE_HOST.value],
        "goals": {UserRole.KARAOKE_HOST.value: 18}
    },
    DayType.WEEKEND: {
        "roles": [UserRole.KARAOKE_HOST.value, UserRole.MC.value],
        "goals": {
            UserRole.KARAOKE_HOST.value: 18,
            UserRole.MC.value: 15
        }
    }
}

# –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–æ–ª–µ–π
ROLE_EMOJIS = {
    UserRole.KARAOKE_HOST.value: "üé§",
    UserRole.MC.value: "üé≠"
}

# –û–ø–∏—Å–∞–Ω–∏—è —Ä–æ–ª–µ–π
ROLE_DESCRIPTIONS = {
    UserRole.KARAOKE_HOST.value: "–ö–∞—Ä–∞–æ–∫–µ –≤–µ–¥—É—â–∏–π",
    UserRole.MC.value: "–ú–°"
}

def get_current_day_type() -> DayType:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è"""
    today = datetime.datetime.now().weekday()
    return DAY_TYPE_MAPPING[today]

def get_roles_for_day_type(day_type: DayType) -> List[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –¥–ª—è —Ç–∏–ø–∞ –¥–Ω—è"""
    return DEFAULT_ROLE_CONFIG[day_type]["roles"]

def get_goals_for_day_type(day_type: DayType) -> Dict[str, int]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–ª–∏ –¥–ª—è —Ä–æ–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–Ω—è"""
    return DEFAULT_ROLE_CONFIG[day_type]["goals"]

def get_role_emoji(role: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–æ–ª–∏"""
    return ROLE_EMOJIS.get(role, "üë§")

def get_role_description(role: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏"""
    return ROLE_DESCRIPTIONS.get(role, role)

def is_weekend_shift() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –≤—ã—Ö–æ–¥–Ω—ã–º (–ø—Ç-—Å–±)"""
    return get_current_day_type() == DayType.WEEKEND

def get_available_roles_for_day(day_of_week: int):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0=–ü–Ω, 6=–í—Å)."""
    if day_of_week in [4, 5]:  # –ü—è—Ç–Ω–∏—Ü–∞, –°—É–±–±–æ—Ç–∞
        return [UserRole.KARAOKE_HOST.value, UserRole.MC.value]
    return [UserRole.KARAOKE_HOST.value]

def get_default_role_goals(day_of_week: int):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–ª–∏ –¥–ª—è —Ä–æ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (18 –≥–æ–ª–æ—Å–æ–≤—ã—Ö –¥–ª—è –≤—Å–µ—Ö)."""
    if day_of_week in [4, 5]:
        return {UserRole.KARAOKE_HOST.value: 18, UserRole.MC.value: 18}
    return {UserRole.KARAOKE_HOST.value: 18}
