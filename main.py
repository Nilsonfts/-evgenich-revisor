import logging
import os
import telebot
import datetime
import pytz
import time
import schedule
import threading
import random
import re

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
logging.basicConfig(level=logging.INFO)
BOT_TOKEN = os.getenv("BOT_TOKEN")

SHIFT_START_HOUR = 19
SHIFT_END_HOUR = 4
VOICE_TIMEOUT_MINUTES = 40
REMIND_EACH_MINUTES = 5
BREAK_DURATION_MINUTES = 15
EXPECTED_VOICES_PER_SHIFT = 15
MIN_VOICE_SECONDS = 7
BREAK_DELAY_MINUTES = 60  # –ü–µ—Ä–µ—Ä—ã–≤ –º–æ–∂–Ω–æ –Ω–µ —á–∞—â–µ 1 —Ä–∞–∑–∞ –≤ BREAK_DELAY_MINUTES

ADMIN_CHAT_ID = -1002645821302
shift_reports = []

moscow_tz = pytz.timezone("Europe/Moscow")
bot = telebot.TeleBot(BOT_TOKEN)

# --- –§—Ä–∞–∑—ã ---
welcome_phrases = [
    "üéôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤–µ–¥—É—â–∏–π! –≠—Ñ–∏—Ä –∂–¥–µ—Ç –Ω–µ –±–æ–ª—Ç–æ–≤–Ω–∏, –∞ —Ä–∞–±–æ—Ç—ã.",
    "üìª –Ø —Ç—É—Ç, —á—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–≤–æ–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π. –ì–æ—Ç–æ–≤—å –≥–æ–ª–æ—Å–æ–≤—ã–µ.",
    "üïµÔ∏è‚Äç‚ôÇÔ∏è –Ø –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é —ç—Ñ–∏—Ä. –ù–µ –ø–æ–¥–≤–µ–¥–∏.",
    "üîî –¢–µ–ø–µ—Ä—å –∑–∞ —Ç–æ–±–æ–π –Ω–∞–±–ª—é–¥–∞—é—Ç. –ù–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è.",
    "üé§ –¢–≤–æ–π –≥–æ–ª–æ—Å ‚Äì —Ç–≤–æ–π KPI. –•–≤–∞—Ç–∏—Ç —Ö–∞–ª—Ç—É—Ä—ã, —Ä–∞–±–æ—Ç–∞–µ–º!",
    "üöÄ –ù–µ –∑–∞–±—É–¥—å: –≥–æ–ª–æ—Å–æ–≤–æ–µ –Ω–µ –±—É–¥–µ—Ç ‚Äì –ø—Ä–µ–º–∏–∏ –Ω–µ –±—É–¥–µ—Ç.",
    "üìù –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –Ω–∞ —Å—á–µ—Ç—É.",
    "‚è≥ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è, –µ—Å–ª–∏ —Ç—ã –º–æ–ª—á–∏—à—å.",
    "üòä –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å. –ù–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∂–¥—ë—Ç –¥–µ–π—Å—Ç–≤–∏–π.",
    "üòé –ó–¥–µ—Å—å –Ω–µ –±–æ–ª–æ—Ç–æ ‚Äì –∫–∞–∂–¥—ã–π –≥–æ–ª–æ—Å –≤–∞–∂–µ–Ω!",
]

soviet_phrases = {
    "voice_reminder": [
        "üò° –ì–¥–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ? –ü–∏–Ω–∫–∞ –ø–æ–ª—É—á–∏—à—å —Å–µ–π—á–∞—Å!",
        "‚õîÔ∏è –¢—ã —á—Ç–æ, –±–µ—Å—Å–º–µ—Ä—Ç–Ω—ã–π? –ì–æ–ª–æ—Å–æ–≤–æ–µ –∏–ª–∏ –ø–æ –∂–æ–ø–µ!",
        "üö® –í —ç—Ñ–∏—Ä–µ —Ç–∏—à–∏–Ω–∞! –î–∞–≤–∞–π –≥–æ–ª–æ—Å–æ–≤–æ–µ, –ø–æ–∫–∞ –Ω–µ –æ—Ç–≤–µ–∑–ª–∏ –≤ –ª–µ—Å!",
        "üï≥Ô∏è –ü—Ä–æ–≤–∞–ª–∏—à—å —Å–º–µ–Ω—É ‚Äî –æ–±—ä—è—Å–Ω—è—Ç—å –±—É–¥–µ—à—å –ª–µ—Å–æ—Ä—É–±–∞–º.",
        "üò§ –≠—Ñ–∏—Ä –Ω–µ —Ä–µ–∑–∏–Ω–æ–≤—ã–π. –í—Ä–µ–º—è –ø–æ—à–ª–æ, —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç, –∏–ª–∏ —Ç–∞–ø–∫–∏?",
        "üíÄ –ú–æ–ª—á–∞–Ω–∏–µ ‚Äî –ø—É—Ç—å –∫ —à—Ç—Ä–∞—Ñ—É. –ì–æ–ª–æ—Å–æ–≤–æ–µ ‚Äî –±—ã—Å—Ç—Ä–æ!",
        "ü•∂ –ë–µ–∑ —Ç–≤–æ–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ —ç—Ñ–∏—Ä –∑–∞–º–µ—Ä–∑–∞–µ—Ç. –ù–µ –¥—Ä–∞–∑–Ω–∏ —Å—É–¥—å–±—É.",
        "üò† –ò–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å, –∏–ª–∏ —Ç–µ–±—è –¥–∞–≤–Ω–æ –≤ –ª–µ—Å –Ω–µ –≤—ã–≤–æ–∑–∏–ª–∏?",
        "üëø –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ‚Äî —Å —Ä–µ–º–Ω–µ–º.",
        "ü§¨ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –Ω–∞ –Ω–∏–∑–∫–æ–º —Å—Ç–∞—Ä—Ç–µ. –ì–¥–µ —Ç–µ–∫—Å—Ç?",
        "üìâ –ö–∞–∂–¥—ã–π –ø—Ä–æ–ø—É—Å–∫ ‚Äî –º–∏–Ω—É—Å –∫ –ø—Ä–µ–º–∏–∏. –ù–µ –Ω–∞—Ä—ã–≤–∞–π—Å—è.",
        "‚ö†Ô∏è –¢—ã –æ–ø—è—Ç—å –∏–≥–Ω–æ—Ä–∏—à—å —ç—Ñ–∏—Ä? –ü–∏–Ω–∫–∞ —Ö–æ—á–µ—à—å?",
        "üö© –°—Ä–æ—á–Ω–æ —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ! –ò–ª–∏ –≤—ã–µ–¥–µ—à—å –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É ‚Äî –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞.",
        "üî• –ò–ª–∏ —Ç—ã –æ–∂–∏–≤–ª—è–µ—à—å —ç—Ñ–∏—Ä, –∏–ª–∏ —ç—Ñ–∏—Ä –æ–∂–∏–≤–∏—Ç —Ç–µ–±—è.",
        "üì¢ –ì–¥–µ —Ç–≤–æ–π –≥–æ–ª–æ—Å? –ù–µ –ø–æ–∑–æ—Ä—å—Å—è, —Ä–∞–±–æ—Ç–∞–π!",
        "üò¨ –î–∞–≤–∞–π, –ø–æ–∫–∞ –Ω–µ –ø–æ–∑–¥–Ω–æ. –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å—é–¥–∞, –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—à—å –ø–æ –ø—è—Ç–æ–π —Ç–æ—á–∫–µ.",
        "üëä –ë—É–¥–µ—Ç —Ç–∏—à–∏–Ω–∞ ‚Äî –±—É–¥–µ—Ç —Ä–∞–∑–Ω–æ—Å. –ù–µ –∏—Å–ø—ã—Ç—ã–≤–∞–π –º–µ–Ω—è.",
        "üõë –ì–æ–ª–æ—Å–æ–≤–æ–µ! –ù–µ —Ö–æ—á–µ—à—å –æ—Å—Ç–∞—Ç—å—Å—è –±–µ–∑ —à—Ç–∞–Ω–æ–≤?",
        "üó£Ô∏è –ú–æ–ª—á–∏—à—å? –ó–Ω–∞—á–∏—Ç, –ø—Ä–µ–º–∏–∏ –Ω–µ –±—É–¥–µ—Ç –∏ —Ç–∞–ø–∫–∏ –≥–æ—Ç–æ–≤—å.",
        "‚ò†Ô∏è –ù—É —á—Ç–æ, –±–µ–∑–¥–µ–ª—å–Ω–∏–∫, —ç—Ñ–∏—Ä –∂–¥—ë—Ç! –ì–æ–ª–æ—Å–æ–≤–æ–µ! –ò–ª–∏ –±–µ–≥–æ–º –≤ –ª–µ—Å.",
        "ü§° –î—É–º–∞–µ—à—å, –∑–∞–±—É–¥—É? –£ –º–µ–Ω—è –ø–∞–º—è—Ç—å –∫–∞–∫ —É –Ω–∞—á–∞–ª—å—Å—Ç–≤–∞.",
        "üò§ –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Ç—ã –º–æ–ª—á–∏—à—å, –≥–¥–µ-—Ç–æ –ø–ª–∞—á–µ—Ç —Ç–≤–æ–π –∫–æ—à–µ–ª—ë–∫.",
        "üí¢ –ù–µ –¥–æ–≤–æ–¥–∏ –¥–æ –∫—Ä–∞—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á—ë—Ç–∞, –∏–Ω–∞—á–µ —Ä–µ–º–µ–Ω—å.",
        "ü•µ –ì—Ä–µ—é —Ä–µ–º–µ–Ω—å, –µ—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ.",
        "ü¶æ –ù–µ —Ö–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å ‚Äî –≤—ã–µ–∑–¥ –∑–∞ –≥–æ—Ä–æ–¥ –æ–±–µ—Å–ø–µ—á–µ–Ω.",
        "üé§ –ú–æ–ª—á–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–µ –≤—ã—Ö–æ–¥, —ç—Ç–æ –±–∏–ª–µ—Ç –Ω–∞ –¥–∞—á—É.",
        "ü§ñ –î–∞–∂–µ —Ä–æ–±–æ—Ç—ã –≥–æ–≤–æ—Ä—è—Ç –±–æ–ª—å—à–µ, —á–µ–º —Ç—ã. –£—á–∏—Å—å —É —Ç–µ—Ö–Ω–∏–∫–∏.",
        "ü¶∑ –¢—ã –∑—É–±—ã –¥–æ–º–∞ –∑–∞–±—ã–ª –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –±–æ–∏—à—å—Å—è –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞?",
        "ü•ä –•–æ—á–µ—à—å —É—Ä–æ–∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–π –º–æ–ª—á–∞—Ç—å.",
        "ü™ì –ù–µ —Ç—è–Ω–∏ ‚Äî —ç—Ñ–∏—Ä —Å–µ–π—á–∞—Å —Å–∞–º —Ç–µ–±—è –ø–æ–¥—Ç—è–Ω–µ—Ç.",
        "üêí –î–∞–∂–µ –æ–±–µ–∑—å—è–Ω–∞ —Å–º–æ–≥–ª–∞ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
        "üî• –ì–¥–µ —Ç–≤–æ–π –æ–≥–æ–Ω—å? –ò–ª–∏ —Ç—ã —É–∂–µ —Ç—É—Ö–ª—è–∫?",
        "üß® –í–æ—Ç-–≤–æ—Ç –≤–∑–æ—Ä–≤—É—Å—å, –µ—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç–∞.",
        "ü§¨ –î–æ—Å—Ç–∞–ª —É–∂–µ –º–æ–ª—á–∞—Ç—å! –ì–æ–ª–æ—Å–æ–≤–æ–µ, –±—ã—Å—Ç—Ä–æ!",
        "üòà –Ø –º–æ–≥—É –±—ã—Ç—å –æ—á–µ–Ω—å –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–º. –ü—Ä–æ–≤–µ—Ä—å.",
        "üî• –ù–µ –±–æ–π—Å—è –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞, –±–æ–π—Å—è –º–µ–Ω—è –±–µ–∑ –æ—Ç—á—ë—Ç–∞.",
        "üëπ –≠—Ñ–∏—Ä –Ω–µ –∂–¥—ë—Ç ‚Äî –æ–Ω —Ç—Ä–µ–±—É–µ—Ç.",
        "ü¶µ –ü–æ—Ä–∞ –ø–æ–¥–Ω—è—Ç—å —Å–≤–æ—é –∑–∞–¥–Ω–∏—Ü—É –∏ —Å–¥–µ–ª–∞—Ç—å –¥–µ–ª–æ!",
        "ü™§ –ù–µ –ø–æ–ø–∞–¥–∞–π –≤ –ª–æ–≤—É—à–∫—É –º–æ–ª—á–∞–Ω–∏—è, –∏–Ω–∞—á–µ –ª–æ–≤—É—à–∫–∞ –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è.",
        "üöí –≠—Ñ–∏—Ä –≥–æ—Ä–∏—Ç, –∞ —Ç—ã –º–æ–ª—á–∏—à—å ‚Äî —Ç—É—à–∏—Ç—å –±—É–¥–µ—à—å?",
        "üë∫ –£—Å—Ç–∞–ª –∂–¥–∞—Ç—å —Ç–≤–æ–π –≥–æ–ª–æ—Å.",
        "ü¶â –î–∞–∂–µ —Å–æ–≤–∞ –Ω–æ—á—å—é –∞–∫—Ç–∏–≤–Ω–µ–µ.",
        "ü§è –¢–≤–æ–π –≤–∫–ª–∞–¥ –ø–æ–∫–∞ –º–µ–Ω—å—à–µ –Ω—É–ª—è.",
        "üé≤ –•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –≤ —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ?",
        "ü¶æ –í–∫–ª—é—á–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã, –∞ –Ω–µ —Å–∏–º—É–ª—è—Ü–∏–∏.",
        "üï≥Ô∏è –í —è–º—É –ª–µ–Ω–∏ –±—ã—Å—Ç—Ä–æ –ø–æ–ø–∞–¥—ë—à—å.",
        "ü¶¶ –í—ã–¥—Ä–∞ –±—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
        "ü¶ñ –î–∏–Ω–æ–∑–∞–≤—Ä –≤—ã–º–µ—Ä, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–ª—á–∞–ª.",
        "ü¶® –ó–∞–ø–∞—Ö –ª–µ–Ω–∏ –¥–æ–Ω–æ—Å–∏—Ç—Å—è –¥–æ –ú–æ—Å–∫–≤—ã.",
        "üçë –ù–µ –∂–¥–∏, —á—Ç–æ –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π —Ç–µ–±—è –≤—ã—Ä—É—á–∏—Ç.",
        "üëé –ú–æ–ª—á–∞–Ω–∏–µ ‚Äî —Ö—É–¥—à–∏–π –≤–∫–ª–∞–¥ –≤ —ç—Ñ–∏—Ä.",
        "üôâ –î–∞–∂–µ –æ–±–µ–∑—å—è–Ω–∞ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–º –≥—Ä–æ–º—á–µ —Ç–µ–±—è.",
        "ü§¨ –ï—Å–ª–∏ –Ω–µ —Å–ª—ã—à—É —Ç–≤–æ–π –≥–æ–ª–æ—Å ‚Äî —Å—á–∏—Ç–∞—é —Ç–µ–±—è –±–µ–∑–¥–µ–ª—å–Ω–∏–∫–æ–º.",
        "üí© –¢–∞–∫–æ–π —Ä–∞–±–æ—Ç—ã –¥–∞–∂–µ —É–Ω–∏—Ç–∞–∑ –Ω–µ –≤–∏–¥–µ–ª.",
        "üõë –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é ‚Äî –ø–æ—Ç–æ–º —Ä–∞–∑–Ω–æ—Å.",
        "ü§¨ –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏–Ω–∞—á–µ –º–Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è.",
        "ü§Ø –í–∑—Ä—ã–≤–∞—é —Å–≤–æ–π –º–æ–∑–≥ –æ—Ç —Ç–≤–æ–µ–≥–æ –º–æ–ª—á–∞–Ω–∏—è.",
        "üê∑ –ü–æ—Ä–∞ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Ö—Ä—é–∫–∞—Ç—å –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å.",
        "ü¶Ü –ö—Ä—è-–∫—Ä—è ‚Äî –¥–∞–∂–µ —É—Ç–∫–∞ –≤ —ç—Ñ–∏—Ä–µ –∞–∫—Ç–∏–≤–Ω–µ–µ.",
        "ü¶ß –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –∂–¥–∞—Ç—å? –ì–æ–ª–æ—Å–æ–≤–æ–µ ‚Äî —Å–µ–π—á–∞—Å!",
        "ü¶ç –ù–µ –±—É–¥—å –≥–æ—Ä–∏–ª–ª–æ–π, –≥–æ–≤–æ—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ.",
        "ü¶ú –Ø –Ω–µ –ø–æ–ø—É–≥–∞–π, –Ω–æ –ø–æ–≤—Ç–æ—Ä—é: –ì–û–õ–û–°–û–í–û–ï!",
        "üê≤ –î—Ä–∞–∫–æ–Ω —É–∂–µ –ø–æ–¥–ª–µ—Ç–∞–µ—Ç –∫ —Ç–≤–æ–µ–π –ø—è—Ç–æ–π —Ç–æ—á–∫–µ.",
    ],
    "scary_reminder": [
        "üëø –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ ‚Äî —Å —Ä–µ–º–Ω–µ–º –∏ –≤—ã–µ–∑–¥–æ–º –≤ –ª–µ—Å.",
        "ü™ì –¢—ã –¥–æ–∏–≥—Ä–∞–µ—à—å—Å—è, –µ—Å–ª–∏ –Ω–µ –ø—Ä–∏—à–ª—ë—à—å –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
        "üíÄ –¢–µ–±—è –¥–∞–≤–Ω–æ –Ω–µ –≤—ã–≤–æ–∑–∏–ª–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É? –ü—Ä–æ–¥–æ–ª–∂–∞–π –º–æ–ª—á–∞—Ç—å.",
        "üòà –ñ–¥—É —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ. –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å, –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç –±–æ–ª—å–Ω–æ.",
        "üëª –≠—Ñ–∏—Ä –ø—É—Å—Ç–µ–µ—Ç. –ó–∞ —Ç–æ–±–æ–π —É–∂–µ —Å–ª–µ–¥—è—Ç.",
        "‚è≥ –ö–∞–∂–¥–∞—è –º–∏–Ω—É—Ç–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ ‚Äî —Ç–≤–æ—è –±–æ–ª—å.",
        "üî™ –ù–µ –¥–æ–≤–æ–¥–∏ –¥–æ –∂—ë—Å—Ç–∫–∏—Ö –º–µ—Ä. –Ø –º–æ–≥—É –±—ã—Ç—å –æ—á–µ–Ω—å —É–±–µ–¥–∏—Ç–µ–ª—å–Ω—ã–º.",
        "ü©∏ –¢–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ –∏–ª–∏... –∂—ë—Å—Ç–∫–∏–π –≤—ã–≥–æ–≤–æ—Ä –∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è.",
        "üò± –¢—ã –Ω–∞ –≥—Ä–∞–Ω–∏ –ø—Ä–æ–≤–∞–ª–∞ —Å–º–µ–Ω—ã. –û—á–Ω–∏—Å—å!",
        "üõë –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ì–æ–ª–æ—Å–æ–≤–æ–µ ‚Äî —Å–µ–π—á–∞—Å, –∏–Ω–∞—á–µ –ø–æ –∂–æ–ø–µ.",
        "‚ö°Ô∏è –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —É–∂–µ –≤ –∫—É—Ä—Å–µ —Ç–≤–æ–µ–π –±–µ–∑–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
        "üëª –í —Ç–µ–º–Ω–æ—Ç–µ –∑–∞ –º–æ–ª—á—É–Ω–æ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞—á–∞–ª—å–Ω–∏–∫.",
        "ü¶∑ –ó–∞ –∫–∞–∂–¥–æ–µ –º–æ–ª—á–∞–Ω–∏–µ —è —Å—ä–µ–¥–∞—é –æ–¥–∏–Ω —Ç–≤–æ–π –∑—É–±.",
        "üíÄ –ü—Ä–µ–º–∏–∏ –Ω–µ –±—É–¥–µ—Ç ‚Äî –±—É–¥–µ—Ç –ø–æ–∑–æ—Ä.",
        "ü¶æ –ù–µ —à–µ–≤–µ–ª–∏—à—å—Å—è ‚Äî –Ω–µ –∂–∏–≤—ë—à—å.",
        "üëÄ –Ø —Å–ª–µ–∂—É –∑–∞ –∫–∞–∂–¥—ã–º —Ç–≤–æ–∏–º –º–æ–ª—á–∞–Ω–∏–µ–º.",
        "üó°Ô∏è –ú–æ–ª—á–∞–Ω–∏–µ ‚Äî —Å–º–µ—Ä—Ç–Ω—ã–π –≥—Ä–µ—Ö –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ.",
        "üêç –ó–º–µ—è —É–≤–æ–ª—å–Ω–µ–Ω–∏—è —É–∂–µ —Ä—è–¥–æ–º.",
        "ü¶Ü –ö—Ä—è–∫–Ω–∏ —Ö–æ—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å, —á—Ç–æ–±—ã –≤—ã–∂–∏—Ç—å.",
        "ü¶ñ –í—ã–º—Ä–µ—à—å, –∫–∞–∫ –¥–∏–Ω–æ–∑–∞–≤—Ä!",
        "ü¶á –Ø –≤–µ–∑–¥–µ ‚Äî –¥–∞–∂–µ –≤ —Ç–≤–æ–∏—Ö —Å–Ω–∞—Ö.",
        "ü¶® –ó–∞–ø–∞—Ö –ª–µ–Ω–∏ –¥–æ—à—ë–ª –¥–æ –Ω–∞—á–∞–ª—å—Å—Ç–≤–∞.",
        "üòà –ù–µ –¥–æ–≤–æ–¥–∏ –¥–æ –≥—Ä–µ—Ö–∞ ‚Äî –≥–æ–≤–æ—Ä–∏.",
        "ü¶¥ –ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –ø—Ä–æ–±–ª–µ–º ‚Äî –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–µ–π—á–∞—Å.",
        "ü¶∑ –ì–æ—Ç–æ–≤—å—Å—è –∫ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∫–µ.",
        "ü¶æ –Ø –Ω–µ —É—Å—Ç–∞–Ω—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å, –Ω–æ —Ç—ã —É—Å—Ç–∞–Ω–µ—à—å —Å–ª—É—à–∞—Ç—å.",
        "ü¶é –õ–µ–Ω—å ‚Äî —Ç–≤–æ–π –≤—Ä–∞–≥.",
        "ü¶î –Å–∂–∏–∫ —É–∂–µ –Ω–∞—á–∞–ª –ø–∏—Å–∞—Ç—å –Ω–∞ —Ç–µ–±—è –∂–∞–ª–æ–±—É.",
        "ü¶° –ë–∞—Ä—Å—É–∫ –Ω–µ –æ–¥–æ–±—Ä–∏—Ç —Ç–∏—à–∏–Ω—É.",
        "ü¶© –§–ª–∞–º–∏–Ω–≥–æ —É–≤–æ–ª–∏–ª–∏ –∑–∞ –º–æ–ª—á–∞–Ω–∏–µ.",
        "ü¶É –ò–Ω–¥—é–∫ –±—ã–ª –≤ —ç—Ñ–∏—Ä–µ ‚Äî —Ç–µ–ø–µ—Ä—å –µ–≥–æ –Ω–µ—Ç.",
        "ü¶¶ –í—ã–¥—Ä–∞ –±–¥–∏—Ç.",
        "ü¶ö –ü–∞–≤–ª–∏–Ω –∂–¥—ë—Ç —Ç–≤–æ–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.",
        "ü¶¢ –ë–µ–ª—ã–π –ª–µ–±–µ–¥—å –Ω–µ –ø—Ä–∏–Ω–µ—Å—ë—Ç –ø—Ä–µ–º–∏—é.",
        "ü¶ú –ü–æ–ø—É–≥–∞–π –ø–æ–≤—Ç–æ—Ä–∏—Ç —Ç–≤–æ–π —Ç–µ–∫—Å—Ç ‚Äî –Ω–æ –µ–≥–æ –Ω–µ—Ç.",
        "ü¶ñ –ù–µ —Å—Ç–∞–Ω—å –≤—ã–º–µ—Ä—à–∏–º.",
        "ü¶Ü –ù–µ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —Ç–µ–±—è —Å—ä–µ–ª–∏ ‚Äî —Ä–∞–±–æ—Ç–∞–π.",
        "ü¶® –ù–µ —Ö–æ—á–µ—à—å –≤–æ–Ω—è—Ç—å –ª–µ–Ω—å—é ‚Äî –≥–æ–≤–æ—Ä–∏.",
        "ü¶î –Å–∂–∏–∫ —É–∂–µ –±–ª–∏–∑–∫–æ.",
        "ü¶° –ë–∞—Ä—Å—É–∫ –Ω–µ–¥–æ–≤–æ–ª–µ–Ω.",
        "ü¶© –§–ª–∞–º–∏–Ω–≥–æ –≥—Ä—É—Å—Ç–∏—Ç –ø–æ —Ç–µ–±–µ.",
    ],
    "break_acknowledgement": [
        "‚òï –ü–µ—Ä–µ—Ä—ã–≤ –∑–∞—Å—á–∏—Ç–∞–Ω, {username}. –°–º–æ—Ç—Ä–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ç—è–Ω—É–ª—Å—è.",
        "üçî –ë—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–∫—É—Å–∏ –∏ –Ω–∞–∑–∞–¥ —Ä–∞–±–æ—Ç–∞—Ç—å.",
        "üï∞Ô∏è 15 –º–∏–Ω—É—Ç –∏ –Ω–µ —Å–µ–∫—É–Ω–¥–æ–π –±–æ–ª—å—à–µ.",
        "üçµ –ü–µ—Ä–µ—Ä—ã–≤, –Ω–æ –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è.",
        "ü•® –ß–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç –∂–¥—É –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
        "üç´ –ù–µ –∑–∞–±—É–¥—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤–æ–≤—Ä–µ–º—è.",
        "üßÉ –û—Ç–¥—ã—Ö–∞–π, –Ω–æ –ø—Ä–µ–º–∏—é –∑–∞ –æ–ø–æ–∑–¥–∞–Ω–∏–µ –Ω–µ –∂–¥–∏.",
        "ü•Ø –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º. –ü–µ—Ä–µ—Ä—ã–≤ –ø–æ—à—ë–ª.",
        "üçã –ù–µ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–π—Å—è –≤ —Å—Ç–æ–ª–æ–≤–æ–π.",
        "ü•§ –ü–æ—Ç–æ–º —Å–Ω–æ–≤–∞ –∑–∞ —Ä–∞–±–æ—Ç—É.",
    ],
    "break_too_soon": [
        "‚ùå –ù–µ –Ω–∞–≥–ª–µ–π! –ü–µ—Ä–µ—Ä—ã–≤ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ —á–∞—Å. –¢–µ—Ä–ø–∏ –µ—â—ë {minutes} –º–∏–Ω. –ù–µ —Ä–∞—Å–∫–∏—Å–∞–π!",
        "üïê –¢—ã –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–¥—ã—Ö–∞–ª. –ï—â—ë —Ä–∞–Ω–æ, —Ä–∞–±–æ—Ç–∞–π! –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ {minutes} –º–∏–Ω.",
        "‚è≥ –ü–µ—Ä–µ—Ä—ã–≤ –Ω–µ —Ä–∞–Ω—å—à–µ —á–µ–º —á–µ—Ä–µ–∑ {minutes} –º–∏–Ω. –¢–µ—Ä–ø–∏, —ç—Ñ–∏—Ä –Ω–µ –ª—é–±–∏—Ç —Å–ª–∞–±–∞–∫–æ–≤.",
        "üí¢ –¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–æ—Ä–≤–∞–ª –ø—è—Ç—É—é —Ç–æ—á–∫—É –æ—Ç —Å—Ç—É–ª–∞. –ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω.",
        "ü•ä –ü–µ—Ä–µ—Ä—ã–≤ —Ä–∞–∑ –≤ —á–∞—Å! –û—Å—Ç–∞–ª–æ—Å—å {minutes} –º–∏–Ω. –î–µ—Ä–∂–∏—Å—å, –Ω–µ —Ä–∞–∑–≤–∞–ª–∏–≤–∞–π—Å—è.",
        "ü•µ –ù–µ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–∞–∫ —á–∞—Å—Ç–æ –æ—Ç–¥—ã—Ö–∞—Ç—å. –ñ–¥–∏ –µ—â—ë {minutes} –º–∏–Ω.",
        "üëä –¢–µ—Ä–ø–∏, —Ä–∞–±–æ—Ç—è–≥–∞! –°–ª–µ–¥—É—é—â–∏–π –ø–µ—Ä–µ—Ä—ã–≤ —á–µ—Ä–µ–∑ {minutes} –º–∏–Ω.",
        "üî• –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –æ—Ç–¥—ã—Ö–∞–µ—à—å! –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ –∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω.",
        "üò§ –•–≤–∞—Ç–∏—Ç —Ö–∞–ª—Ç—É—Ä–∏—Ç—å. –î–æ –ø–µ—Ä–µ—Ä—ã–≤–∞ –µ—â—ë {minutes} –º–∏–Ω.",
        "üõë –ü–µ—Ä–µ—Ä—ã–≤ –Ω–µ –ø–æ–ª–æ–∂–µ–Ω! –î–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –µ—â—ë {minutes} –º–∏–Ω.",
    ],
    "too_short": [
        "üóëÔ∏è –¢—ã —ç—Ç–æ —Å–µ–π—á–∞—Å –≤—Å–µ—Ä—å—ë–∑? –ì–æ–ª–æ—Å–æ–≤–æ–µ –º–µ–Ω—å—à–µ 7 —Å–µ–∫—É–Ω–¥ ‚Äî –¥–∞–∂–µ —á–∏—Ç–∞—Ç—å —Å—Ç—ã–¥–Ω–æ.",
        "‚è≥ –¢–∞–∫–æ–π –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç –¥–∞–∂–µ —ë–∂–∏–∫ –±—ã –Ω–µ –ø—Ä–∏–Ω—è–ª.",
        "üò§ –ú–µ–Ω—å—à–µ 7 —Å–µ–∫—É–Ω–¥ ‚Äî –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è! –ù–µ —Ö–∞–ª—Ç—É—Ä—å.",
        "üëé –≠—Ç–æ –Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ, –∞ –º–∏–∫—Ä–æ-–ø–µ—Ä–¥–µ–∂. –ü–µ—Ä–µ–∑–∞–ø–∏—à–∏!",
        "üôÑ –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –Ω–∞–≥–æ–≤–æ—Ä–∏—Ç—å —Ö–æ—Ç—è –±—ã 7 —Å–µ–∫—É–Ω–¥ ‚Äî –∑–∞—á–µ–º —Ç—ã –∑–¥–µ—Å—å?",
    ],
    "accept": [
        "‚úÖ –ü—Ä–∏–Ω—è—Ç–æ. –°–ª–µ–¥–∏ –∑–∞ —Å–º–µ–Ω–æ–π, –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è.",
        "üëå –ì–æ–¥–∏—Ç—Å—è. –ù–æ –µ—Å–ª–∏ –±—É–¥–µ—à—å —Ö–∞–ª—Ç—É—Ä–∏—Ç—å ‚Äî –ø–∏–Ω–∫–∞ –ø–æ–ª—É—á–∏—à—å!",
        "üëç –û—Ç–º–µ—Ç–∏–ª. –ï—â—ë –ø–∞—Ä—É —Ç–∞–∫–∏—Ö ‚Äî –∏, –º–æ–∂–µ—Ç –±—ã—Ç—å, –Ω–µ —É–≤–æ–ª—é.",
        "üö© –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª. –ù–æ –µ—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –º–∞–ª–æ ‚Äî –≤—ã–µ–∑–∂–∞–µ–º –≤ –ª–µ—Å.",
        "üòè –ü—Ä–∏–Ω—è—Ç–æ, –Ω–æ —Ä–∞—Å—Å–ª–∞–±–ª—è—Ç—å—Å—è —Ä–∞–Ω–æ. –Ø –∑–∞ —Ç–æ–±–æ–π —Å–ª–µ–∂—É!",
        "ü¶æ –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å. –ù–æ –æ—Ç–¥—ã—Ö–∞—Ç—å –±—É–¥–µ—à—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã.",
        "üëÄ –ü—Ä–∏–Ω—è–ª. –ó–∞ –∫–∞–∂–¥—ã–º —Ç–≤–æ–∏–º —Å–ª–æ–≤–æ–º ‚Äî –º–æ–π –∑–æ—Ä–∫–∏–π –≥–ª–∞–∑.",
        "üòà –ü–æ–∫–∞ —Ö–æ—Ä–æ—à–æ, –Ω–æ –ø–æ–ø—Ä–æ–±—É–π —Ç–æ–ª—å–∫–æ –∑–∞–º–æ–ª—á–∞—Ç—å.",
        "üìù –ó–∞–ø–∏—Å–∞–ª. –ù–æ –µ—Å–ª–∏ –ø–ª–∞–Ω –Ω–µ —Å–¥–µ–ª–∞–µ—à—å ‚Äî —Å–∞–º –∑–Ω–∞–µ—à—å —á—Ç–æ –±—É–¥–µ—Ç.",
        "üî• –ü–æ—à–ª–æ –¥–µ–ª–æ. –ù–æ –¥–µ—Ä–∂–∏ —Ç–µ–º–ø, –∏–Ω–∞—á–µ —Ç–∞–ø–∫–∏ –≥–æ—Ç–æ–≤—å.",
        "üëä –í–æ—Ç —ç—Ç–æ –ø–æ-–Ω–∞—à–µ–º—É! –¢–æ–ª—å–∫–æ –Ω–µ —Å–±–∞–≤–ª—è–π –æ–±–æ—Ä–æ—Ç—ã.",
        "ü¶µ –ü—Ä–∏–Ω—è—Ç–æ. –ó–∞ —Å–ª–∞–±–∏–Ω—É ‚Äî –ø–æ –ø—è—Ç–æ–π —Ç–æ—á–∫–µ.",
        "ü•∂ –ù–µ –¥–∞–π –∑–∞–º—ë—Ä–∑–Ω—É—Ç—å —ç—Ñ–∏—Ä—É. –î–µ—Ä–∂–∏ —Ç–µ–º–ø!",
        "ü§° –ù–µ —Ü–∏—Ä–∫, –∞ —Ä–∞–±–æ—Ç–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π!",
        "üò¨ –ü—Ä–∏–Ω—è—Ç–æ. –ù–æ –µ—Å–ª–∏ –±—É–¥–µ—à—å —Ç—É–ø–∏—Ç—å ‚Äî —Ä–µ–º–µ–Ω—å —Ä—è–¥–æ–º.",
        "üö® –í—Å—ë –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª. –ù–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è!",
        "üçë –ü–æ –∂–æ–ø–µ –Ω–µ —Ö–æ—á–µ—à—å? –¢–æ–≥–¥–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.",
        "üòú –ú–æ–ª–æ–¥–µ—Ü. –ù–æ —Ç–æ–ª—å–∫–æ –ø–æ–ø—Ä–æ–±—É–π —É–π—Ç–∏ –≤ —Ç–µ–Ω—å.",
        "üöÄ –ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ! –≠—Ñ–∏—Ä –ª—é–±–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö.",
        "üí™ –í–æ—Ç —Ç–∞–∫ –±—ã –≤—Å–µ–≥–¥–∞. –ù–æ —è –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–ª–µ–∂—É.",
    ]
}

BREAK_KEYWORDS = [
    "–ø–µ—Ä–µ—Ä—ã–≤", "–ø–µ—Ä–µ–∫—É—Ä", "–ø–æ–∫—É—Ä–∏—Ç—å", "—è –Ω–∞ –ø–µ—Ä–µ—Ä—ã–≤", "—è –Ω–∞ –æ–±–µ–¥", "–æ–±–µ–¥", "—è –∫—É—à–∞—Ç—å",
    "–∫—É—à–∞—Ç—å", "–µ–º", "–µ—Å—Ç—å", "–æ—Ç–¥–æ—Ö–Ω—É—Ç—å", "–ø–∏—Ç—å", "–∫–æ—Ñ–µ", "—á–∞–π", "–æ—Ç–æ–π—Ç–∏", "–æ—Ç–æ–π–¥—É"
]

chat_data = {}

def get_username(message):
    if message.from_user.username:
        return f"@{message.from_user.username}"
    return message.from_user.first_name

def get_user_by_username(users_dict, username):
    for uid, info in users_dict.items():
        if info['username'].lower() == username.lower():
            return uid, info
    return None, None

def get_chat_title(chat_id):
    try:
        title = bot.get_chat(chat_id).title
        return title if title else str(chat_id)
    except Exception:
        return str(chat_id)

@bot.message_handler(commands=["start"])
def send_welcome(message):
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ä—Ç
    if message.chat.id == ADMIN_CHAT_ID:
        return
    if message.text.strip().lower().startswith("/start @"):
        # –†—É—á–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –ø–æ —Ç–µ–≥—É - —Å–º. /start @username
        match = re.match(r'/start\s+@([a-zA-Z0-9_]+)', message.text.strip())
        if match:
            requested_username = "@" + match.group(1)
            chat_id = message.chat.id
            if chat_id not in chat_data:
                bot.reply_to(message, "üö´ –í —ç—Ç–æ–º —á–∞—Ç–µ –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –±—ã–ª–æ.")
                return
            users = chat_data[chat_id]['users']
            uid, userinfo = get_user_by_username(users, requested_username)
            if uid:
                chat_data[chat_id]['main_id'] = uid
                chat_data[chat_id]['main_username'] = requested_username
                bot.send_message(chat_id, f"‚ö°Ô∏è –†—É—á–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {requested_username} —Ç–µ–ø–µ—Ä—å –≥–ª–∞–≤–Ω—ã–π –Ω–∞ —Å–º–µ–Ω–µ! –ù–µ –∑–∞–±—É–¥—å, —Ö–∞–ª—è–≤–∞ –Ω–µ –ø—Ä–æ–π–¥—ë—Ç ‚Äî –¥–µ—Ä–∂–∏ —ç—Ñ–∏—Ä!")
            else:
                bot.reply_to(message, f"–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {requested_username} –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
        else:
            bot.reply_to(message, "–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: /start @username")
        return
    welcome_message = random.choice(welcome_phrases)
    bot.reply_to(message, welcome_message)

@bot.message_handler(content_types=['voice'])
def handle_voice_message(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = get_username(message)
    now = datetime.datetime.now(moscow_tz)
    if chat_id not in chat_data:
        chat_data[chat_id] = {'main_id': None, 'main_username': None, 'users': {}, 'shift_start': now, 'chat_title': get_chat_title(chat_id)}
    users = chat_data[chat_id]['users']
    if user_id not in users:
        users[user_id] = {'username': username, 'count': 0, 'reminded': False, 'on_break': False, 'breaks_count': 0, 'late_returns': 0, 'last_remind_time': None}
    user = users[user_id]
    # –ù–ï –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ –∫–æ—Ä–æ—á–µ 7 —Å–µ–∫—É–Ω–¥!
    voice_duration = message.voice.duration
    if voice_duration < MIN_VOICE_SECONDS:
        bot.send_message(chat_id, random.choice(soviet_phrases["too_short"]))
        return

    user['count'] += 1
    user['last_voice_time'] = now
    user['reminded'] = False
    user['last_remind_time'] = None
    chat_data[chat_id]['chat_title'] = get_chat_title(chat_id)
    if chat_data[chat_id]['main_id'] is None:
        chat_data[chat_id]['main_id'] = user_id
        chat_data[chat_id]['main_username'] = username
        chat_data[chat_id]['shift_start'] = now
        users[user_id]['last_voice_time'] = now
        text = f"{username}, —Ç–µ–ø–µ—Ä—å —Ç—ã –≥–ª–∞–≤–Ω—ã–π. –ù–µ –∑–∞–±—É–¥—å: –≥–æ–ª–æ—Å–æ–≤–æ–π ‚Äî —Ç–≤–æ—è –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å!"
        bot.send_message(chat_id, text)
    elif chat_data[chat_id]['main_id'] == user_id and user['count'] > 1:
        bot.send_message(chat_id, f"{username}, {random.choice(soviet_phrases['accept'])}")
    if user.get('on_break'):
        break_start = user.get('break_start_time')
        if break_start:
            minutes_on_break = (user['last_voice_time'] - break_start).total_seconds() / 60
            if minutes_on_break > BREAK_DURATION_MINUTES:
                user['late_returns'] += 1
        user['on_break'] = False
        bot.send_message(chat_id, random.choice(soviet_phrases["return_success"]).format(username=username))
    logging.info(f"üéß –ì–æ–ª–æ—Å–æ–≤–æ–µ –æ—Ç {username} –≤ —á–∞—Ç–µ {chat_id}. –í—Å–µ–≥–æ: {users[user_id]['count']}")

def break_requested(text):
    lowered = text.lower()
    return any(word in lowered for word in BREAK_KEYWORDS)

@bot.message_handler(func=lambda m: m.text and break_requested(m.text))
def handle_break_request(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    if getattr(message, "forward_from", None) or getattr(message, "forward_from_chat", None):
        return
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = get_username(message)
    now = datetime.datetime.now(moscow_tz)
    if chat_id not in chat_data or chat_data[chat_id].get('main_id') != user_id:
        bot.reply_to(message, "‚õî –ü–µ—Ä–µ—Ä—ã–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –Ω–∞ —Å–º–µ–Ω–µ. –ù–µ –Ω–∞—Ä—É—à–∞–π –ø–æ—Ä—è–¥–æ–∫.")
        return
    user = chat_data[chat_id]['users'][user_id]
    last_break_time = user.get('last_break_time')
    if last_break_time:
        minutes_since_last_break = (now - last_break_time).total_seconds() / 60
        if minutes_since_last_break < BREAK_DELAY_MINUTES:
            remaining = int(BREAK_DELAY_MINUTES - minutes_since_last_break)
            phrase = random.choice(soviet_phrases["break_too_soon"]).format(minutes=remaining)
            bot.reply_to(message, phrase)
            return
    user['breaks_count'] += 1
    user['on_break'] = True
    user['break_start_time'] = now
    user['last_break_time'] = now
    ack = random.choice(soviet_phrases["break_acknowledgement"]).format(username=username)
    bot.reply_to(message, ack)

@bot.message_handler(commands=["obed"])
def obed_command(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    handle_break_request(message)

@bot.message_handler(commands=["restart"])
def restart_main(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    chat_id = message.chat.id
    if chat_id in chat_data:
        chat_data[chat_id]['main_id'] = None
        chat_data[chat_id]['main_username'] = None
        chat_data[chat_id]['shift_start'] = datetime.datetime.now(moscow_tz)
        bot.send_message(chat_id, "üîÑ –°–º–µ–Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞. –ñ–¥—É –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ!")

def get_reminder_phrase():
    return random.choice(soviet_phrases["voice_reminder"])

def check_users_activity():
    for chat_id, data in chat_data.items():
        main_id = data.get('main_id')
        if not main_id:
            continue
        user = data['users'].get(main_id)
        if not user:
            continue
        now = datetime.datetime.now(moscow_tz)
        if user.get('on_break'):
            minutes_on_break = (now - user['break_start_time']).total_seconds() / 60
            if minutes_on_break > BREAK_DURATION_MINUTES and not user.get('reminded'):
                try:
                    phrase = random.choice(soviet_phrases["return_success"])
                    bot.send_message(chat_id, f"{user['username']}, {phrase}")
                    user['reminded'] = True
                except Exception as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∫–æ–Ω—Ü–µ –ø–µ—Ä–µ—Ä—ã–≤–∞: {e}")
            continue
        if 'last_voice_time' in user:
            minutes_passed = (now - user['last_voice_time']).total_seconds() / 60
            if minutes_passed > VOICE_TIMEOUT_MINUTES:
                if not user.get('last_remind_time') or (now - user['last_remind_time']).total_seconds() / 60 >= REMIND_EACH_MINUTES:
                    if random.random() < 0.5:
                        phrase = random.choice(soviet_phrases["scary_reminder"])
                    else:
                        phrase = get_reminder_phrase()
                    bot.send_message(chat_id, f"{user['username']}, {phrase}")
                    user['last_remind_time'] = now
            else:
                user['last_remind_time'] = None

def get_report_lines(chat_id, data):
    main_id = data.get('main_id')
    users = data.get('users', {})
    main_user = users.get(main_id)
    if not main_user:
        return ["–ì–ª–∞–≤–Ω—ã–π –≤–µ–¥—É—â–∏–π –µ—â—ë –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω."]
    breaks_count = main_user.get('breaks_count', 0)
    late_returns = main_user.get('late_returns', 0)
    said_count = main_user.get('count', 0)
    perc = round(said_count / EXPECTED_VOICES_PER_SHIFT * 100)
    username = main_user.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    chat_title = data.get('chat_title') or get_chat_title(chat_id)
    report_lines = [
        f"üìã #–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π_–æ—Ç—á–µ—Ç ({data['shift_start'].strftime('%d.%m.%Y')})",
        f"üè¢ –ß–∞—Ç: {chat_title}",
        f"üé§ –í–µ–¥—É—â–∏–π: {username}",
        f"üó£Ô∏è –ì–æ–ª–æ—Å–æ–≤—ã—Ö: {said_count} –∏–∑ {EXPECTED_VOICES_PER_SHIFT} ({perc}%)",
        f"‚òï –ü–µ—Ä–µ—Ä—ã–≤–æ–≤: {breaks_count}",
        f"‚è≥ –ó–∞–¥–µ—Ä–∂–µ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞: {late_returns}",
    ]
    return report_lines

@bot.message_handler(commands=["–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π", "promezhut"])
def send_interim_report(message):
    chat_id = message.chat.id
    if chat_id not in chat_data:
        bot.send_message(chat_id, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–º–µ–Ω–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")
        return
    report_lines = get_report_lines(chat_id, chat_data[chat_id])
    bot.send_message(chat_id, "\n".join(report_lines))

def send_end_of_shift_reports():
    now = datetime.datetime.now(moscow_tz)
    for chat_id, data in chat_data.items():
        main_id = data.get('main_id')
        users = data.get('users', {})
        main_user = users.get(main_id)
        if not main_user:
            continue
        breaks_count = main_user.get('breaks_count', 0)
        late_returns = main_user.get('late_returns', 0)
        said_count = main_user.get('count', 0)
        perc = round(said_count / EXPECTED_VOICES_PER_SHIFT * 100)
        username = main_user.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        chat_title = data.get('chat_title') or get_chat_title(chat_id)
        praise = ""
        if perc >= 80:
            praise = "\n\n" + random.choice(soviet_phrases["praise"])
        elif perc >= 50:
            praise = "\n\n" + random.choice(soviet_phrases["voice_reminder"])
        elif perc < 50:
            praise = "\n\n‚ö†Ô∏è –°–º–µ–Ω–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞, —ç—Ñ–∏—Ä –±—ã–ª —Å–ª–∏—à–∫–æ–º —Ç–∏—Ö–∏–º!"
        report_lines = [
            f"üìã #–û—Ç—á–µ—Ç_–¢–µ–∫—Å—Ç_–í–µ–¥—É—â–µ–≥–æ ({data['shift_start'].strftime('%d.%m.%Y')})",
            f"üè¢ –ß–∞—Ç: {chat_title}",
            f"üé§ –í–µ–¥—É—â–∏–π: {username}",
            f"üó£Ô∏è –í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤—ã—Ö: {said_count} –∏–∑ {EXPECTED_VOICES_PER_SHIFT} ({perc}%)",
            f"‚òï –ü–µ—Ä–µ—Ä—ã–≤–æ–≤: {breaks_count}",
            f"‚è≥ –ó–∞–¥–µ—Ä–∂–µ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞: {late_returns}",
            praise
        ]
        final_report = "\n".join([line for line in report_lines if line.strip()])
        try:
            bot.send_message(chat_id, final_report)
        except Exception as e:
            logging.error(str(e))
        shift_reports.append({
            "chat_id": chat_id,
            "chat_title": chat_title,
            "date": data['shift_start'].strftime("%d.%m.%Y"),
            "report": final_report
        })
    chat_data.clear()

def get_official_conclusion(perc, late_returns):
    if perc >= 100:
        return "–ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é."
    elif perc >= 80:
        return "–ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–æ—è–≤–∏–ª –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É."
    elif perc >= 50:
        return "–ü–ª–∞–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–ª—É—á—à–µ–Ω–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
    else:
        return "–ü–ª–∞–Ω –ø—Ä–æ–≤–∞–ª–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏ —Å—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å."

def send_admin_summary():
    if not shift_reports:
        return
    admin_report_phrases = [
        "@nilfts –Ø –≤—Å–µ –ø—Ä–æ –Ω–∏—Ö –∑–Ω–∞—é! üïµÔ∏è‚Äç‚ôÇÔ∏è –í–æ—Ç –∫–∞–∫ –æ–Ω–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏:",
        "@nilfts –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º! –í–æ—Ç —Å–≤–µ–∂–∏–π –æ—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ:",
        "@nilfts –î–æ–∫–ª–∞–¥—ã–≤–∞—é –æ —Ä–∞–±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—ã! –°–º–æ—Ç—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:",
        "@nilfts –ü—Ä–æ–≤–µ—Ä–∏–ª –≤—Å–µ—Ö –∫–∞–∫ –Ω–∞–¥–æ ‚Äî –¥–µ—Ä–∂—É –æ—Ç—á—ë—Ç:",
        "@nilfts –í–Ω–∏–º–∞–Ω–∏–µ! –°–≤–æ–¥–∫–∞ –ø–æ —Å–º–µ–Ω–µ –≥–æ—Ç–æ–≤–∞:",
        "@nilfts –û—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ –∫–∞–∫ –Ω–∞ –ª–∞–¥–æ–Ω–∏! –í–æ—Ç –¥–µ—Ç–∞–ª–∏:",
        "@nilfts –í—Å—ë –∑–∞–ø–∏—Å–∞–ª ‚Äî –≤–æ—Ç –∫–∞–∫ —Ç—Ä—É–¥–∏–ª–∏—Å—å:",
        "@nilfts –í–æ—Ç –∏—Ö –ø–æ–¥–≤–∏–≥–∏ –∑–∞ —Å–º–µ–Ω—É! –°–º–æ—Ç—Ä–∏–º:",
        "@nilfts –û—Ç—á—ë—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ—Å—Ç–µ:",
        "@nilfts –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –≤–æ—Ç –∫–∞–∫ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞–ª–∏:",
    ]
    intro = random.choice(admin_report_phrases)
    report_lines = [intro, ""]
    for item in shift_reports:
        lines = item["report"].splitlines()
        said_count = 0
        expected = EXPECTED_VOICES_PER_SHIFT
        late_returns = 0
        chat_title = item.get("chat_title", "")
        for line in lines:
            if "–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤—ã—Ö" in line:
                try:
                    said_count = int(line.split(":")[1].split("–∏–∑")[0].strip())
                    expected = int(line.split("–∏–∑")[1].split("(")[0].strip())
                except Exception:
                    pass
            if "–ó–∞–¥–µ—Ä–∂–µ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞" in line:
                try:
                    late_returns = int(line.split(":")[1].strip())
                except Exception:
                    pass
        perc = round(said_count / expected * 100) if expected else 0
        conclusion = get_official_conclusion(perc, late_returns)
        report_lines.append(f"üè¢ –ß–∞—Ç: {chat_title}")
        report_lines.append(item["report"])
        report_lines.append(conclusion)
        report_lines.append("")
    summary = "\n".join(report_lines)
    try:
        bot.send_message(ADMIN_CHAT_ID, summary, parse_mode="HTML")
    except Exception as e:
        logging.error(f"Admin summary error: {e}")
    shift_reports.clear()

@bot.message_handler(commands=["–æ—Ç—á–µ—Ç", "otchet"])
def send_manual_admin_report(message):
    if message.chat.id == ADMIN_CHAT_ID:
        send_admin_summary()
        bot.reply_to(message, "–û—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É.")
    else:
        send_end_of_shift_reports()
        send_admin_summary()
        bot.reply_to(message, "–û—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —ç—Ç–æ—Ç —á–∞—Ç –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É.")

def run_scheduler():
    schedule.every(1).minutes.do(check_users_activity)
    schedule.every().day.at("01:01").do(send_end_of_shift_reports)
    schedule.every().day.at("09:00").do(send_admin_summary)
    while True:
        schedule.run_pending()
        time.sleep(1)

if __name__ == '__main__':
    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –Ω–∞ —Å–º–µ–Ω–µ... üéôÔ∏è")
    scheduler_thread = threading.Thread(target=run_scheduler)
    scheduler_thread.daemon = True
    scheduler_thread.start()
    while True:
        try:
            bot.polling(none_stop=True, timeout=60, long_polling_timeout=60)
        except Exception as e:
            logging.error(f"Polling exception: {e}")
            time.sleep(10)
