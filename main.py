import logging
import os
import telebot
import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telebot import types
import json
import pytz  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏, –µ–µ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")
SPREADSHEET_ID = os.getenv("SPREADSHEET_ID")

scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds_dict = json.loads(os.getenv("GOOGLE_APPLICATION_CREDENTIALS"))
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SPREADSHEET_ID).sheet1

bot = telebot.TeleBot(BOT_TOKEN)

# --- –í–∞—à —Å–ª–æ–≤–∞—Ä—å —Å —Ñ—Ä–∞–∑–∞–º–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
soviet_phrases = {
    "report": [
        "‚úÖ –ü—Ä–∏–Ω—è—Ç–æ! –î–æ–∫–ª–∞–¥ –±–ª–µ—Å—Ç—è—â–∏–π!",
        "üìà –û—Ç—á—ë—Ç –ø—Ä–∏–Ω—è—Ç, –∫–∞–∫ —Ç–æ—Å—Ç –Ω–∞ –±–∞–Ω–∫–µ—Ç–µ!",
        "üóÇÔ∏è –í—Å—ë –≤–Ω–µ—Å–µ–Ω–æ. –ú–æ–ª–æ–¥–µ—Ü!",
        "üìã –°–∏—Å—Ç–µ–º–∞ –¥–æ–≤–æ–ª—å–Ω–∞ —Ç–≤–æ–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π.",
        "üßæ –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –≤ –ª–µ—Ç–æ–ø–∏—Å—è—Ö —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è.",
        "üìä –î–∞–Ω–Ω—ã–µ –∑–∞–Ω–µ—Å–µ–Ω—ã. –ü—Ä–æ—Ñ—Å–æ—é–∑ –æ–¥–æ–±—Ä–∏—Ç.",
        "üîç –í –æ—Ç—á—ë—Ç–µ –≤—Å—ë —á—ë—Ç–∫–æ. –•–æ—Ä–æ—à–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª!",
        "‚úèÔ∏è –ë—É–º–∞–≥–∞ —Å—Ç–µ—Ä–ø–µ–ª–∞ ‚Äî –∏ —Ç–∞–±–ª–∏—Ü–∞ —Ç–æ–∂–µ.",
        "üïÆ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ. –†–∞–±–æ—Ç–∞ –∏–¥—ë—Ç!",
        "üìé –í–∫–ª–∞–¥ –æ—Ç–º–µ—á–µ–Ω. –¢—ã –Ω–∞–¥—ë–∂–µ–Ω, –∫–∞–∫ —Ç–æ–∫–∞—Ä—å!",
        "üìì –û—Ç—á—ë—Ç –≤—ã–≥–ª—è–¥–∏—Ç –¥–æ—Å—Ç–æ–π–Ω–æ.",
        "üìå –ü—Ä–∏–Ω—è—Ç–æ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ. –í—Å—ë –ø–æ —É—Å—Ç–∞–≤—É!",
        "üîñ –õ–æ–≥ –æ–±–Ω–æ–≤–ª—ë–Ω. –¢–æ–≤–∞—Ä–∏—â–∏ –¥–æ–≤–æ–ª—å–Ω—ã!",
        "üìò –ê—Ä—Ö–∏–≤ –ø–æ–ø–æ–ª–Ω–∏–ª—Å—è —Å–≤–µ–∂–µ–π —Å—Ç—Ä–æ–∫–æ–π.",
        "üìö –ë—É–º–∞–≥–∏ –ª–µ—Ç–∞—é—Ç, –æ—Ç—á—ë—Ç –≥–æ—Ç–æ–≤!",
        "üîê –î–µ–ª–æ —Å–¥–µ–ª–∞–Ω–æ, –∑–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!",
        "üì® –ü—Ä–∏–Ω—è—Ç–æ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—à–ª–∞ –≤ —Ö—Ä–æ–Ω–∏–∫—É!",
        "üíº –í—Å—ë –ø–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É. –°–ø–∞—Å–∏–±–æ!",
        "üñáÔ∏è –°–∫—Ä–µ–ø–ª–µ–Ω–æ –∏ –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!",
        "üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ–¥–≤–∏–≥ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω."
    ]
    # ... –∏ –¥—Ä—É–≥–∏–µ –≤–∞—à–∏ —Å–ø–∏—Å–∫–∏ —Ñ—Ä–∞–∑ ...
}

# --- –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
# –≠—Ç–æ—Ç —Å–ª–æ–≤–∞—Ä—å –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ {id_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–æ–æ–±—â–µ–Ω–∏–π}
# –í–ê–ñ–ù–û: –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—Å—è—Ç—Å—è.
voice_counts = {}

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
@bot.message_handler(content_types=['voice'])
def handle_voice_message(message):
    user_id = message.from_user.id
    username = f"@{message.from_user.username}" if message.from_user.username else message.from_user.first_name

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_count = voice_counts.get(user_id, 0) + 1
    voice_counts[user_id] = current_count

    logging.info(f"–ó–∞—Å—á–∏—Ç–∞–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username}. –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {current_count}")


# --- –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ---
@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    bot.reply_to(message, "–°–∞–ª–∞–º, –≤–µ–¥—É—â–∏–π! –Ø –±—É–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—á–∏—Ç–∞—Ç—å —Ç–≤–æ–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ö–æ–≥–¥–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /–æ—Ç—á–µ—Ç.")

@bot.message_handler(commands=["–æ—Ç—á–µ—Ç"])
def handle_report(message):
    try:
        user_id = message.from_user.id
        user = message.from_user
        username = f"@{user.username}" if user.username else user.first_name

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö. –ï—Å–ª–∏ –∏—Ö –Ω–µ –±—ã–ª–æ, –≤–µ—Ä–Ω–µ—Ç—Å—è 0.
        facts = voice_counts.get(user_id, 0)

        # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ—à–∏—Ç—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å–æ –≤—Ç–æ—Ä—ã–º —á–∏—Å–ª–æ–º. –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –µ–≥–æ –ø—É—Å—Ç—ã–º.
        could_be = ""  # –ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å "5", "10" –∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
        moscow_tz = pytz.timezone("Europe/Moscow")
        now = datetime.datetime.now(moscow_tz).strftime("%d.%m.%Y")

        phrase = soviet_phrases["report"][hash(user_id) % len(soviet_phrases["report"])]

        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
        row = [f"#{now}", username, str(facts), could_be, phrase]

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        sheet.append_row(row)
        logging.info(f"–î–æ–±–∞–≤–ª–µ–Ω –æ—Ç—á–µ—Ç: {row}")
        bot.reply_to(message, f"{phrase}\n–ó–∞–ø–∏—Å–∞–Ω–æ –≤ –∂—É—Ä–Ω–∞–ª **{facts}** –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∑–∞ {now}.")

        # –û–±–Ω—É–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        voice_counts[user_id] = 0
        logging.info(f"–°—á–µ—Ç—á–∏–∫ –¥–ª—è {username} —Å–±—Ä–æ—à–µ–Ω.")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.reply_to(message, "–¢–æ–≤–∞—Ä–∏—â, –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)
