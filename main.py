import logging
import os
import telebot
import datetime
import pytz
import time
import schedule
import threading
import random

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
logging.basicConfig(level=logging.INFO)
BOT_TOKEN = os.getenv("BOT_TOKEN")

SHIFT_START_HOUR = 19
SHIFT_END_HOUR = 4
VOICE_TIMEOUT_MINUTES = 40  # —á–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–ø–µ—Ä–≤—ã–µ
REMIND_EACH_MINUTES = 5     # –¥–∞–ª–µ–µ –∫–∞–∂–¥—ã–µ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å
BREAK_DURATION_MINUTES = 15
EXPECTED_VOICES_PER_SHIFT = 15

ADMIN_CHAT_ID = -1002645821302  # <-- id —á–∞—Ç–∞ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞!
shift_reports = []

moscow_tz = pytz.timezone("Europe/Moscow")
bot = telebot.TeleBot(BOT_TOKEN)

# --- –§—Ä–∞–∑—ã ---
welcome_phrases = [
    "üéôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤–µ–¥—É—â–∏–π! –≠—Ñ–∏—Ä –∂–¥–µ—Ç —Ç–≤–æ–∏—Ö —Å–ª–æ–≤.",
    "üìª –ü—Ä–∏–≤–µ—Ç! –Ø —É–∂–µ –Ω–∞ —Å–≤—è–∑–∏ ‚Äî –±—É–¥—É —Å—á–∏—Ç–∞—Ç—å —Ç–≤–æ–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ.",
    "üïµÔ∏è‚Äç‚ôÇÔ∏è –ù–∞ —Å—Ç—Ä–∞–∂–µ —ç—Ñ–∏—Ä–∞! –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º.",
    "üîî –¢—ã –≤ —ç—Ñ–∏—Ä–µ ‚Äî —Ç–µ–ø–µ—Ä—å –∑–∞ —Ç–æ–±–æ–π —Å–ª–µ–∂—É —è!",
    "üé§ –û–∂–∏–¥–∞—é —Ç–≤–æ–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤. –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º —ç—Ç–æ—Ç —ç—Ñ–∏—Ä –ª—É—á—à–∏–º!",
    "üöÄ –í–ø–µ—Ä—ë–¥, –≤–µ–¥—É—â–∏–π! –ì–æ–ª–æ—Å–æ–≤—ã–µ ‚Äî —Ç–≤–æ–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É.",
    "üìù –í—Å—ë, —á—Ç–æ —Å–∫–∞–∂–µ—à—å ‚Äî –±—É–¥–µ—Ç —É—á—Ç–µ–Ω–æ. –Ø –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω.",
    "‚è≥ –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –æ—Ç—á—ë—Ç ‚Äî —è –Ω–µ –¥—Ä–µ–º–ª—é.",
    "üòä –†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –Ω–∞ —Å–º–µ–Ω–µ! –ü—É—Å—Ç—å –±—É–¥–µ—Ç –≤–µ—Å–µ–ª–æ.",
    "üòé –¢—ã –≥–æ—Ç–æ–≤? –¢–æ–≥–¥–∞ –ø–æ–µ—Ö–∞–ª–∏!",
    "ü§ù –î—Ä—É–∂–∏—â–µ, —è —Ç—É—Ç, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Å –ø–æ–¥—Å—á—ë—Ç–æ–º.",
    "üîä –õ—é–±–æ–µ —Ç–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî —É–∂–µ –≤–∫–ª–∞–¥ –≤ —ç—Ñ–∏—Ä.",
    "üìÖ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! –ù–µ –∑–∞–±—É–¥—å –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
    "ü•≥ –ü—É—Å—Ç—å —ç—Ç–∞ —Å–º–µ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π!",
    "üé≤ –î–∞–≤–∞–π –¥–æ–±–∞–≤–∏–º –Ω–µ–º–Ω–æ–≥–æ –∫—Ä–µ–∞—Ç–∏–≤–∞ –≤ —ç—Ñ–∏—Ä.",
    "üåà –°–¥–µ–ª–∞–π —ç—Ñ–∏—Ä —è—Ä—á–µ —Å–≤–æ–∏–º –≥–æ–ª–æ—Å–æ–º.",
    "üí° –Ø –æ—Ç–º–µ—á–∞—é –≤—Å–µ —Ç–≤–æ–∏ –∏–¥–µ–∏.",
    "ü¶æ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞. –í–µ–¥—É—â–∏–π, –¥–∞–≤–∞–π —Ä–∞–±–æ—Ç–∞—Ç—å!",
    "üåü –ö–∞–∂–¥—ã–π —Ç–≤–æ–π –≥–æ–ª–æ—Å ‚Äî —ç—Ç–æ –∑–≤–µ–∑–¥–∞ –≤ —ç—Ñ–∏—Ä–µ.",
    "‚ú® –í–¥–æ—Ö–Ω–æ–≤–ª—è–π —Å–ª—É—à–∞—Ç–µ–ª–µ–π!",
    "üéß –Ø –≤—Å—ë —Å—á–∏—Ç–∞—é. –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—É–¥—É.",
    "üõ†Ô∏è –ï—Å–ª–∏ —á—Ç–æ ‚Äî –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–≥—É —Å–æ–≤–µ—Ç–æ–º.",
    "üì¢ –ì–æ—Ç–æ–≤—å —Ç–µ–∫—Å—Ç—ã, —è –≥–æ—Ç–æ–≤ –∏—Ö —Å–ª—É—à–∞—Ç—å.",
    "üßê –ó–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π —Å–ª–µ–∂—É —è ‚Äî –Ω–µ –ø–æ–¥–≤–µ–¥–∏!",
    "üö¶ –ü–æ–µ—Ö–∞–ª–∏ ‚Äî —ç—Ñ–∏—Ä –∂–¥—ë—Ç!",
    "üñáÔ∏è –°—á—ë—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω.",
    "üí¨ –ù–µ –º–æ–ª—á–∏ ‚Äî —ç—Ñ–∏—Ä –ª—é–±–∏—Ç –±–æ–ª—Ç–∞—Ç—å.",
    "üë®‚Äçüíº –î–∞–≤–∞–π –ø–æ–∫–∞–∂–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É, –∫–∞–∫ –Ω–∞–¥–æ —Ä–∞–±–æ—Ç–∞—Ç—å!",
    "üé∂ –ü—É—Å—Ç—å —Ç–≤–æ–π –≥–æ–ª–æ—Å –∑–≤—É—á–∏—Ç –∫–∞–∫ –º—É–∑—ã–∫–∞.",
    "üëã –ü—Ä–∏–≤–µ—Ç, –≥–µ—Ä–æ–π —ç—Ñ–∏—Ä–∞!",
    "üö® –í–Ω–∏–º–∞–Ω–∏–µ! –°–º–µ–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å.",
    "üìà –ü—É—Å—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ç–≤–æ–∏—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –±—É–¥–µ—Ç –∫—Ä—É—á–µ –≤—Å–µ—Ö.",
    "üß≠ –î–µ—Ä–∂—É –ø—É—Ç—å –ø–æ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º.",
    "üìä –ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –Ω–∞—Å –∫ —É—Å–ø–µ—Ö—É.",
    "üï∞Ô∏è –¢–∞–π–º–µ—Ä –ø–æ—à—ë–ª ‚Äî –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏ –ø–µ—Ä–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
    "‚ö° –ó–∞—Ä—è–∂–∞–π —ç—Ñ–∏—Ä —ç–Ω–µ—Ä–≥–∏–µ–π!",
    "üèÜ –ë—É–¥—å —á–µ–º–ø–∏–æ–Ω–æ–º –ø–æ –≥–æ–ª–æ—Å–æ–≤—ã–º.",
    "üé∫ –¢—Ä—É–±–∏ –≤ —ç—Ñ–∏—Ä ‚Äî —è –≤—Å—ë —É—Å–ª—ã—à—É.",
    "üññ –£–¥–∞—á–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Å–º–µ–Ω–µ!",
    "ü•á –ü—É—Å—Ç—å —ç—Ç–∞ —Å–º–µ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç —Ä–µ–∫–æ—Ä–¥–Ω–æ–π!"
]

soviet_phrases = {
    "voice_reminder": [
        "üîî –ù–∞–ø–æ–º–∏–Ω–∞—é –ø—Ä–æ —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ.",
        "üì¢ –ñ–¥—É —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ.",
        "üéôÔ∏è –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
        "‚è∞ –í—Ä–µ–º—è –ø—Ä–∏—Å–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ.",
        "üìª –≠—Ñ–∏—Ä –∂–¥—ë—Ç —Ç–≤–æ–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ.",
        "üîä –ü–æ—Ä–∞ –∑–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ.",
        "üí¨ –ù–µ –æ—Ç—Ç—è–≥–∏–≤–∞–π, –ø—Ä–∏—Å—ã–ª–∞–π —Ç–µ–∫—Å—Ç.",
        "üì° –≠—Ñ–∏—Ä—É –Ω—É–∂–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.",
        "üé§ –î–∞–π –∑–Ω–∞—Ç—å, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å.",
        "üõéÔ∏è –ù–µ –º–æ–ª—á–∏ ‚Äî —ç—Ñ–∏—Ä –∂–¥—ë—Ç.",
        "üéµ –¢–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ ‚Äî –º—É–∑—ã–∫–∞ –¥–ª—è —ç—Ñ–∏—Ä–∞.",
        "üìû –ñ–¥—ë–º —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.",
        "üó£Ô∏è –≠—Ñ–∏—Ä –ª—é–±–∏—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ.",
        "üéß –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ —ç—Ñ–∏—Ä.",
        "üìù –û—Ç–º–µ—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º.",
        "üìä –î–ª—è –æ—Ç—á—ë—Ç–∞ –Ω—É–∂–µ–Ω —Ç–µ–∫—Å—Ç.",
        "üñáÔ∏è –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ —Å–≤–æ–π –¥–æ–ª–≥.",
        "üé¨ –ü–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.",
        "üîÑ –ù–∞–ø–æ–º–Ω—é –µ—â—ë —Ä–∞–∑, –µ—Å–ª–∏ —á—Ç–æ.",
        "üï∞Ô∏è –ù–µ —Ç—è–Ω–∏ ‚Äî –≤—Ä–µ–º—è –∏–¥—ë—Ç.",
        "üì≤ –≠—Ñ–∏—Ä –≤—Å–µ–≥–¥–∞ —Ä–∞–¥.",
        "üí° –ü–æ–¥–µ–ª–∏—Å—å –º—ã—Å–ª—è–º–∏ –≤—Å–ª—É—Ö.",
        "ü¶æ –ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö.",
        "üéØ –î–æ—Å—Ç–∏–≥–Ω–∏ –ø–ª–∞–Ω–∞ –ø–æ –≥–æ–ª–æ—Å–æ–≤—ã–º.",
        "üìÜ –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ —Å–º–µ–Ω—É.",
        "ü¶â –ñ–¥—ë–º —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.",
        "üìö –î–µ—Ä–∂—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ‚Äî –Ω–µ –∑–∞–±—ã–≤–∞–π.",
        "üìë –î–ª—è –æ—Ç—á—ë—Ç–∞ –Ω—É–∂–µ–Ω —Ç–≤–æ–π –≥–æ–ª–æ—Å.",
        "üé∂ –î–∞–≤–∞–π –æ–∂–∏–≤–∏–º —ç—Ñ–∏—Ä.",
        "üé∏ –ü—É—Å—Ç—å —Ç–≤–æ–π –≥–æ–ª–æ—Å –ø—Ä–æ–∑–≤—É—á–∏—Ç.",
        "ü•Å –î–∞–π —Ä–∏—Ç–º —Å–º–µ–Ω–µ.",
        "üé∫ –ó–∞—Å–≤–µ—Ç–∏—Å—å –≤ —ç—Ñ–∏—Ä–µ.",
        "ü•≥ –°–¥–µ–ª–∞–π —ç—Ñ–∏—Ä –≤–µ—Å—ë–ª—ã–º.",
        "üòé –ë—É–¥—å –∞–∫—Ç–∏–≤–Ω–µ–µ.",
        "ü§© –ñ–¥—É —Ç–≤–æ–µ–≥–æ –∫—Ä–µ–∞—Ç–∏–≤–∞.",
        "ü§ì –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –ø–ª–∞–Ω.",
        "ü§ñ –ë–æ—Ç –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏.",
        "ü•á –ë—É–¥—å –ø–µ—Ä–≤—ã–º –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö.",
        "üèÅ –ù–µ –æ—Ç—Å—Ç–∞–≤–∞–π –æ—Ç –ø–ª–∞–Ω–∞.",
        "üö¶ –î–∞–≤–∞–π, –≤–µ–¥—É—â–∏–π, —ç—Ñ–∏—Ä –∂–¥—ë—Ç."
    ],
    "scary_reminder": [
        "üòà –ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤–µ–¥—É—â–µ–≥–æ ‚Äî –ø—Ä–∏–¥—ë—Ç –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä —ç—Ñ–∏—Ä–∞.",
        "üëπ –¢—ã –∂–µ –Ω–µ —Ö–æ—á–µ—à—å –≥–Ω–µ–≤ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞?",
        "üï∑Ô∏è –ë–µ–∑ —Ç–µ–∫—Å—Ç–∞ –≤–µ–¥—É—â–µ–≥–æ —ç—Ñ–∏—Ä –ø–æ–≥–∏–±–∞–µ—Ç.",
        "üßü‚Äç‚ôÇÔ∏è –ù–µ –¥—Ä–∞–∑–Ω–∏ —ç—Ñ–∏—Ä –º–æ–ª—á–∞–Ω–∏–µ–º!",
        "üëæ –†–∏—Å–∫ –ø–æ—Ç–µ—Ä—è—Ç—å –ø—Ä–µ–º–∏—é —Ä–∞—Å—Ç—ë—Ç.",
        "üíÄ –ù–µ –¥–æ–≤–æ–¥–∏ –¥–æ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.",
        "üëª –ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç–∞ ‚Äî –ø—Ä–∏–¥—ë—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –±–æ—Ç–∞.",
        "üî™ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —É–∂–µ —Ä—è–¥–æ–º.",
        "üßô‚Äç‚ôÇÔ∏è –Ø –Ω–∞–ª–æ–∂—É –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç–∞.",
        "ü¶π‚Äç‚ôÇÔ∏è –ù–µ –≤—ã–∑—ã–≤–∞–π —Ç—ë–º–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É —ç—Ñ–∏—Ä–∞.",
        "ü¶á –í —ç—Ñ–∏—Ä–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–µ–º–Ω–æ.",
        "üë∫ –ü—Ä—è—á–µ—à—å—Å—è? –≠—Ñ–∏—Ä –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–∞–π–¥—ë—Ç —Ç–µ–±—è.",
        "üêâ –î—Ä–∞–∫–æ–Ω –Ω–µ –ª—é–±–∏—Ç —Ç–∏—à–∏–Ω—É.",
        "ü¶† –í–∏—Ä—É—Å –º–æ–ª—á–∞–Ω–∏—è –æ–ø–∞—Å–µ–Ω.",
        "üëΩ –ò–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–µ –∂–¥—É—Ç —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ.",
        "ü¶à –ê–∫—É–ª–∞ —ç—Ñ–∏—Ä–∞ –∫—Ä—É–∂–∏—Ç —Ä—è–¥–æ–º.",
        "ü¶ù –ï–Ω–æ—Ç-–±–æ—Å—Å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ.",
        "ü¶ë –ù–µ –∑–∞–±—É–¥—å, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –∫–∞—Ä–∞.",
        "üêç –ó–º–µ–π –º–æ–ª—á–∞–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è.",
        "ü¶Ö –û—Ä—ë–ª —ç—Ñ–∏—Ä–∞ —Å–ª–µ–¥–∏—Ç.",
        "ü¶ñ –î–∏–Ω–æ–∑–∞–≤—Ä-–Ω–∞—á–∞–ª—å–Ω–∏–∫ –≥–Ω–µ–≤–∞–µ—Ç—Å—è.",
        "ü¶Ü –£—Ç–∫–∞ –∂–¥–µ—Ç —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ.",
        "ü¶¢ –ë–µ–ª—ã–π –ª–µ–±–µ–¥—å –Ω–µ –ø—Ä–∏–Ω–µ—Å—ë—Ç –ø—Ä–µ–º–∏—é.",
        "ü¶ú –ü–æ–ø—É–≥–∞–π –ø–æ–≤—Ç–æ—Ä–∏—Ç —Ç–≤–æ–π —Ç–µ–∫—Å—Ç ‚Äî –Ω–æ –µ–≥–æ –Ω–µ—Ç.",
        "ü¶ö –ü–∞–≤–ª–∏–Ω –∂–¥—ë—Ç –ø–æ—Ö–≤–∞–ª—ã, –Ω–æ –∫—Ç–æ-—Ç–æ –º–æ–ª—á–∏—Ç.",
        "ü¶© –§–ª–∞–º–∏–Ω–≥–æ —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω.",
        "ü¶É –ò–Ω–¥—é–∫ —ç—Ñ–∏—Ä–∞ –Ω–µ–¥–æ–≤–æ–ª–µ–Ω.",
        "ü¶¶ –í—ã–¥—Ä–∞ –±–¥–∏—Ç.",
        "ü¶® –°–∫—É–Ω—Å —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è.",
        "ü¶• –õ–µ–Ω–∏–≤–µ—Ü –Ω–µ —Ç–∞–∫ —É–∂ –∏ –º–µ–¥–ª–∏—Ç–µ–ª–µ–Ω.",
        "ü¶¶ –ù–µ –ª–µ–Ω–∏—Å—å, —ç—Ñ–∏—Ä –∂–¥—ë—Ç.",
        "ü¶î –Å–∂–∏–∫ –∂–¥—ë—Ç —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ.",
        "ü¶° –ë–∞—Ä—Å—É–∫ –Ω–µ –æ–¥–æ–±—Ä–∏—Ç —Ç–∏—à–∏–Ω—É.",
        "ü¶É –¢—É—Ä—Ü–∏—è –ø—Ä–µ–º–∏–π –Ω–µ –±—É–¥–µ—Ç.",
        "ü¶ö –ù–µ –¥–æ–≤–æ–¥–∏ –¥–æ –∫—Ä–∞–π–Ω–∏—Ö –º–µ—Ä.",
        "ü¶© –°–∫–æ—Ä–æ –±—É–¥–µ—Ç —Å–æ–≤–µ—â–∞–Ω–∏–µ.",
        "ü¶ú –ì–¥–µ —Ç—ã, –≤–µ–¥—É—â–∏–π?",
        "ü¶¢ –ú–æ–ª—á–∞–Ω–∏–µ ‚Äî –Ω–µ –∑–æ–ª–æ—Ç–æ.",
        "ü¶ö –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å!"
    ],
    "break_acknowledgement": [
        "‚òï –ü–µ—Ä–µ—Ä—ã–≤ –ø—Ä–∏–Ω—è—Ç, {username}. –ù–µ –∑–∞–±—É–¥—å –≤–æ–≤—Ä–µ–º—è –≤–µ—Ä–Ω—É—Ç—å—Å—è!",
        "üç∞ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞, {username}!",
        "ü•§ –û—Ç–¥–æ—Ö–Ω–∏, {username}, –Ω–æ –Ω–µ –æ—á–µ–Ω—å –¥–æ–ª–≥–æ.",
        "üßÅ –ü–µ—Ä–µ—Ä—ã–≤ –∑–∞—Å—á–∏—Ç–∞–Ω, {username}!",
        "üï∞Ô∏è –¢–∞–π–º–µ—Ä –Ω–∞ 15 –º–∏–Ω—É—Ç –ø–æ—à—ë–ª.",
        "üç´ –ü–æ–¥–∫—Ä–µ–ø–∏—Å—å, –ø–æ—Ç–æ–º –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º.",
        "üçµ –ß–∞–π-–∫–æ—Ñ–µ ‚Äî —Å–≤—è—Ç–æ–µ!",
        "ü•™ –ü–µ—Ä–µ–∫—É—Å–∏—Ç—å ‚Äî —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞.",
        "üç≤ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞.",
        "üçπ –ì–ª–∞–≤–Ω–æ–µ ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤–æ–≤—Ä–µ–º—è.",
        "üçî –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ —ç—Ñ–∏—Ä.",
        "ü•ó –ñ–¥—É —Ç–µ–±—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞.",
        "üç¶ –°–ª–∞–¥–∫–∏–π –æ—Ç–¥—ã—Ö, {username}!",
        "‚è≥ –í—Ä–µ–º—è –ø–æ—à–ª–æ.",
        "üõãÔ∏è –†–∞—Å—Å–ª–∞–±—å—Å—è, —Ç—ã –∑–∞—Å–ª—É–∂–∏–ª.",
        "ü•í –ù–µ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–π—Å—è.",
        "ü•§ –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –±–æ–¥—Ä—ã–º.",
        "üçâ –≠—Ñ–∏—Ä –ø–æ–∫–∞ –ø–æ–¥–æ–∂–¥—ë—Ç.",
        "ü•® –ü—Ä–∏—è—Ç–Ω–æ–≥–æ —á–∞–µ–ø–∏—Ç–∏—è.",
        "üçõ –ö—É—à–∞–π –≤–∫—É—Å–Ω–æ.",
        "üçü –ü–µ—Ä–µ—Ä—ã–≤ –ø—Ä–∏—è—Ç–µ–Ω, —ç—Ñ–∏—Ä –≤–∞–∂–Ω–µ–µ.",
        "üç≥ –î–æ –≤—Å—Ç—Ä–µ—á–∏ –ø–æ—Å–ª–µ –æ—Ç–¥—ã—Ö–∞.",
        "ü•ß –†–∞–±–æ—Ç–∞ –ø–æ–¥–æ–∂–¥—ë—Ç.",
        "üç™ –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ ‚Äî –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º.",
        "üßÉ –ó–∞—Ä—è–¥–∏—Å—å —ç–Ω–µ—Ä–≥–∏–µ–π.",
        "üçç –í–µ–¥—É—â–∏–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—ã—Ç.",
        "ü•≠ –°–∏–ª—ã –ø–æ–ø–æ–ª–Ω–µ–Ω—ã? –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è.",
        "üçá –ü–æ—Ä–∞–±–æ—Ç–∞–ª ‚Äî —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–æ—Ö–Ω–∏.",
        "üçÑ –ü–µ—Ä–µ—Ä—ã–≤ ‚Äî —ç—Ç–æ –Ω–µ –æ—Ç–ø—É—Å–∫.",
        "üç© –ù–µ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–π—Å—è –Ω–∞ –∫—É—Ö–Ω–µ.",
        "ü•§ –ü–µ–π, –µ—à—å, –æ—Ç–¥—ã—Ö–∞–π.",
        "ü•ù –ü–æ—Ç–æ–º –ø–æ–±–æ–ª—Ç–∞–µ–º, –∞ –ø–æ–∫–∞ –æ—Ç–¥—ã—Ö.",
        "üçã –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞ ‚Äî –≤ –±–æ–π.",
        "üçä –ñ–¥—ë–º —Ç–≤–æ–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è.",
        "üçè –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ —ç—Ñ–∏—Ä.",
        "üçê –í–µ—Ä–Ω—ë—à—å—Å—è ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∏–º.",
        "üçé –ü–µ—Ä–µ—Ä—ã–≤ ‚Äî —ç—Ç–æ —Å–≤—è—Ç–æ–µ.",
        "üçÖ –ù–µ –∑–∞—Ç—è–≥–∏–≤–∞–π.",
        "üçí –î–æ —Å–∫–æ—Ä–æ–≥–æ, –≤–µ–¥—É—â–∏–π.",
        "üçì 15 –º–∏–Ω—É—Ç –∏ —Å–Ω–æ–≤–∞ —ç—Ñ–∏—Ä."
    ],
    "praise": [
        "ü•≥ –ú–æ–ª–æ–¥–µ—Ü! –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ –æ—Ç–ª–∏—á–Ω–æ! üëè",
        "üöÄ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω! üèÖ",
        "üî• –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –¢—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ! üèÜ",
        "üåü –ü—Ä–∏–º–µ—Ä –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí°",
        "üéâ –¢—ã –≥–µ—Ä–æ–π —ç—Ñ–∏—Ä–∞! –ë—Ä–∞–≤–æ! üé∫",
        "üí™ –õ–µ–≥–µ–Ω–¥–∞ —Å–º–µ–Ω—ã! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üèÜ",
        "üçÄ –£–¥–∞—á–∞ –≤—Å–µ–≥–¥–∞ —Å —Ç–æ–±–æ–π! üëç",
        "üòâ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–æ–≤–æ–ª—å–Ω–æ! ü•Ç",
        "ü¶∏‚Äç‚ôÇÔ∏è –¢—ã —Å—É–ø–µ—Ä–≤–µ–¥—É—â–∏–π! –ü—Ä–æ–¥–æ–ª–∂–∞–π! üí™",
        "üï∫ –¢–≤–æ–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ ‚Äî –ø—Ä–∞–∑–¥–Ω–∏–∫ –¥–ª—è —ç—Ñ–∏—Ä–∞! üéà",
        "üèÖ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!",
        "‚ö° –≠–Ω–µ—Ä–≥–∏—è –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç.",
        "üìà –ì—Ä–∞—Ñ–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –≤—ã—à–µ –≤—Å–µ—Ö.",
        "üé∂ –¢–≤–æ–π –≥–æ–ª–æ—Å ‚Äî —É–∫—Ä–∞—à–µ–Ω–∏–µ —ç—Ñ–∏—Ä–∞.",
        "üéØ –ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤ —Ü–µ–ª—å!",
        "üß≤ –ü—Ä–∏—Ç—è–≥–∏–≤–∞–µ—à—å —É—Å–ø–µ—Ö.",
        "üññ –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!",
        "üß© –í—Å–µ —á–∞—Å—Ç–∏ —ç—Ñ–∏—Ä–∞ –Ω–∞ –º–µ—Å—Ç–µ.",
        "üé¨ –õ—É—á—à–∞—è —Å–º–µ–Ω–∞!",
        "üåû –¢–≤–æ–π –≥–æ–ª–æ—Å ‚Äî –ª—É—á —Å–æ–ª–Ω—Ü–∞.",
        "üçâ –°–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
        "üé§ –ì–æ–ª–æ—Å –≤–µ–¥—É—â–µ–≥–æ ‚Äî –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç.",
        "üìª –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ.",
        "üé∫ –¢—Ä—É–±–∏ —Ç–∞–∫ –∂–µ –¥–∞–ª—å—à–µ!",
        "üë®‚Äçüé§ –ù–∞—Å—Ç–æ—è—â–∏–π –∞—Ä—Ç–∏—Å—Ç —ç—Ñ–∏—Ä–∞.",
        "ü•∞ –≠—Ñ–∏—Ä –ª—é–±–∏—Ç —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.",
        "üéä –ü—Ä–∞–∑–¥–Ω–∏–∫ –Ω–∞ —ç—Ñ–∏—Ä–µ.",
        "üç´ –í–∫—É—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞.",
        "üß† –ú–æ–∑–≥ —ç—Ñ–∏—Ä–∞.",
        "üí° –°–≤–µ—Ç–ª–∞—è –≥–æ–ª–æ–≤–∞!",
        "üéì –≠—Ç–∞–ª–æ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö.",
        "üìö –£—á–µ–±–Ω–∏–∫ –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ.",
        "üîî –í—Å–µ–≥–¥–∞ –≤–æ–≤—Ä–µ–º—è.",
        "‚è∞ –ù–∏ –æ–¥–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏.",
        "ü¶æ –ñ–µ–ª–µ–∑–Ω–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞.",
        "üèÅ –§–∏–Ω–∏—à–∏—Ä–æ–≤–∞–ª –ø–µ—Ä–≤—ã–º.",
        "üèÜ –ß–µ–º–ø–∏–æ–Ω —ç—Ñ–∏—Ä–∞.",
        "ü•á –ó–æ–ª–æ—Ç–æ–π –≤–µ–¥—É—â–∏–π.",
        "üëè –ê–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç—ã!",
        "üöÄ –†–∞–∫–µ—Ç–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å."
    ],
    "return_success": [
        "‚úÖ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}! –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º.",
        "üëç –û—Ç–ª–∏—á–Ω–æ, {username}. –ü–µ—Ä–µ—Ä—ã–≤ –æ–∫–æ–Ω—á–µ–Ω ‚Äî —ç—Ñ–∏—Ä –∂–¥—ë—Ç.",
        "üëè –ú–æ–ª–æ–¥–µ—Ü, {username}! –°–Ω–æ–≤–∞ –Ω–∞ —Å–≤—è–∑–∏.",
        "üé© –ù—É —á—Ç–æ, {username}, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å?",
        "üï∫ {username}, —Ç—ã –≤ —Å—Ç—Ä–æ—é ‚Äî —ç—Ñ–∏—Ä –¥–æ–≤–æ–ª–µ–Ω!",
        "üèÖ –í–æ—Ç —ç—Ç–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞, {username}!",
        "üéØ –ü—Ä–∏—è—Ç–Ω–æ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞, {username}!",
        "üåû –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {username}.",
        "üõ†Ô∏è –ü–µ—Ä–µ—Ä—ã–≤ –∑–∞–≤–µ—Ä—à—ë–Ω, –∫ —Ä–∞–±–æ—Ç–µ {username}!",
        "üö¶ –î–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä—ë–¥, {username}, —ç—Ñ–∏—Ä —Ç–≤–æ–π.",
        "üåà –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ—Ç–ª–∏—á–Ω–æ–µ!",
        "üé¨ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —ç—Ñ–∏—Ä, {username} –Ω–∞ –º–µ—Å—Ç–µ.",
        "ü¶æ {username}, —Ç—ã ‚Äî –ø—Ä–∏–º–µ—Ä –¥–ª—è –¥—Ä—É–≥–∏—Ö!",
        "üåü –í–µ—Ä–Ω—É–ª—Å—è –≤–æ–≤—Ä–µ–º—è ‚Äî —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å.",
        "üé§ –ì–æ–ª–æ—Å –≤–µ–¥—É—â–µ–≥–æ –≤–Ω–æ–≤—å –≤ —ç—Ñ–∏—Ä–µ!",
        "üìª –ë–µ–∑ —Ç–µ–±—è –±—ã–ª–æ —Å–∫—É—á–Ω–æ, {username}.",
        "üï∂Ô∏è –ö–∞–∫ –≤—Å–µ–≥–¥–∞ –ø—É–Ω–∫—Ç—É–∞–ª–µ–Ω, {username}.",
        "üß≠ –í–ø–µ—Ä—ë–¥ –∫ –Ω–æ–≤—ã–º –≥–æ–ª–æ—Å–æ–≤—ã–º!",
        "üìà –í–µ–¥—É—â–∏–π –Ω–∞ –º–µ—Å—Ç–µ ‚Äî —ç—Ñ–∏—Ä –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
        "üí™ {username}, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å.",
        "üçÄ –ü—É—Å—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ —Å–º–µ–Ω—ã –±—É–¥–µ—Ç –ª—ë–≥–∫–∏–º!",
        "ü•≥ –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞.",
        "ü•Ç –ó–∞ —Ç–≤–æ—ë –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ, {username}!",
        "üöÄ –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º —Å–≤–µ—Ä—à–µ–Ω–∏—è–º.",
        "üß© –ë–µ–∑ —Ç–µ–±—è —ç—Ñ–∏—Ä –±—ã–ª –Ω–µ –ø–æ–ª–Ω—ã–π.",
        "üé∂ –≠—Ñ–∏—Ä —Å–Ω–æ–≤–∞ –∑–∞–∑–≤—É—á–∞–ª.",
        "üèÅ –í–µ–¥—É—â–∏–π –≤–µ—Ä–Ω—É–ª—Å—è, —ç—Ñ–∏—Ä —Å—Ç–∞—Ä—Ç—É–µ—Ç.",
        "üé≤ –ù–µ –±—É–¥–µ–º –±–æ–ª—å—à–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤–∞–º–∏.",
        "üë®‚Äçüíº –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –¥–æ–≤–æ–ª—å–Ω–æ!",
        "üß† –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –≥–æ–ª–æ—Å–æ–≤—ã–µ, {username}.",
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –æ–±—Ä–∞—Ç–Ω–æ!",
        "üîî –í—Å—ë, –ø–µ—Ä–µ—Ä—ã–≤ –∑–∞–∫–æ–Ω—á–µ–Ω.",
        "‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç–∞—Ç—å!",
        "üéâ –û—Ç–ª–∏—á–Ω–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞, {username}!",
        "ü¶∏ –¢—ã ‚Äî –≥–µ—Ä–æ–π —ç—Ñ–∏—Ä–∞.",
        "üèÜ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –∫ –ø–æ–±–µ–¥–µ.",
        "üç´ –ü–µ—Ä–µ—Ä—ã–≤ –∑–∞–≤–µ—Ä—à—ë–Ω, –∞ —Ç–µ–ø–µ—Ä—å –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º.",
        "üì¢ –í–µ–¥—É—â–∏–π —Å–Ω–æ–≤–∞ –Ω–∞ —Å–≤—è–∑–∏.",
        "üïµÔ∏è –Ø –≤—Å—ë –≤–∏–∂—É ‚Äî —Ç—ã –º–æ–ª–æ–¥–µ—Ü!",
        "üßë‚ÄçüöÄ –ö—É—Ä—Å –Ω–∞ —Ö–æ—Ä–æ—à–∏–π —ç—Ñ–∏—Ä!"
    ]
}

BREAK_KEYWORDS = [
    "–ø–µ—Ä–µ—Ä—ã–≤", "–ø–µ—Ä–µ–∫—É—Ä", "–ø–æ–∫—É—Ä–∏—Ç—å", "—è –Ω–∞ –ø–µ—Ä–µ—Ä—ã–≤", "—è –Ω–∞ –æ–±–µ–¥", "–æ–±–µ–¥", "—è –∫—É—à–∞—Ç—å",
    "–∫—É—à–∞—Ç—å", "–µ–º", "–µ—Å—Ç—å", "–æ—Ç–¥–æ—Ö–Ω—É—Ç—å", "–ø–∏—Ç—å", "–∫–æ—Ñ–µ", "—á–∞–π", "–æ—Ç–æ–π—Ç–∏", "–æ—Ç–æ–π–¥—É"
]

chat_data = {}

def get_username(message):
    if message.from_user.username:
        return f"@{message.from_user.username}"
    return message.from_user.first_name

def get_user_by_username(users_dict, username):
    for uid, info in users_dict.items():
        if info['username'].lower() == username.lower():
            return uid, info
    return None, None

@bot.message_handler(content_types=['voice'])
def handle_voice_message(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = get_username(message)
    now = datetime.datetime.now(moscow_tz)
    if chat_id not in chat_data:
        chat_data[chat_id] = {'main_id': None, 'main_username': None, 'users': {}, 'shift_start': now}
    users = chat_data[chat_id]['users']
    if user_id not in users:
        users[user_id] = {'username': username, 'count': 0, 'reminded': False, 'on_break': False, 'breaks_count': 0, 'late_returns': 0, 'last_remind_time': None}
    user = users[user_id]
    user['count'] += 1
    user['last_voice_time'] = now
    user['reminded'] = False
    user['last_remind_time'] = None  # —Å–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ—Å–ª–µ –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ
    if chat_data[chat_id]['main_id'] is None:
        chat_data[chat_id]['main_id'] = user_id
        chat_data[chat_id]['main_username'] = username
        chat_data[chat_id]['shift_start'] = now
        users[user_id]['last_voice_time'] = now
        text = f"{username}, —Ç–µ–ø–µ—Ä—å —Ç—ã –≥–ª–∞–≤–Ω—ã–π! –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ!"
        bot.send_message(chat_id, text)
    elif chat_data[chat_id]['main_id'] == user_id and user['count'] > 1:
        bot.send_message(chat_id, f"{username}, –ø—Ä–∏–Ω—è—Ç–æ! –¢–µ–∫—Å—Ç –≤–µ–¥—É—â–µ–≥–æ –ø–æ–ª—É—á–µ–Ω.")
    if user.get('on_break'):
        break_start = user.get('break_start_time')
        if break_start:
            minutes_on_break = (user['last_voice_time'] - break_start).total_seconds() / 60
            if minutes_on_break > BREAK_DURATION_MINUTES:
                user['late_returns'] += 1
        user['on_break'] = False
        bot.send_message(chat_id, random.choice(soviet_phrases["return_success"]).format(username=username))
    logging.info(f"üéß –ì–æ–ª–æ—Å–æ–≤–æ–µ –æ—Ç {username} –≤ —á–∞—Ç–µ {chat_id}. –í—Å–µ–≥–æ: {users[user_id]['count']}")

def break_requested(text):
    lowered = text.lower()
    return any(word in lowered for word in BREAK_KEYWORDS)

@bot.message_handler(func=lambda m: m.text and break_requested(m.text))
def handle_break_request(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    if getattr(message, "forward_from", None) or getattr(message, "forward_from_chat", None):
        return
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = get_username(message)
    if chat_id not in chat_data or chat_data[chat_id].get('main_id') != user_id:
        bot.reply_to(message, "‚õî –ü–µ—Ä–µ—Ä—ã–≤ –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–æ–º—É –Ω–∞ —Å–º–µ–Ω–µ! ü¶ª")
        return
    user = chat_data[chat_id]['users'][user_id]
    user['breaks_count'] += 1
    user['on_break'] = True
    user['break_start_time'] = datetime.datetime.now(moscow_tz)
    ack = random.choice(soviet_phrases["break_acknowledgement"]).format(username=username)
    bot.reply_to(message, ack)

@bot.message_handler(commands=["obed"])
def obed_command(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    handle_break_request(message)

@bot.message_handler(commands=["restart"])
def restart_main(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    chat_id = message.chat.id
    if chat_id in chat_data:
        chat_data[chat_id]['main_id'] = None
        chat_data[chat_id]['main_username'] = None
        chat_data[chat_id]['shift_start'] = datetime.datetime.now(moscow_tz)
        bot.send_message(chat_id, "üîÑ –°–º–µ–Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞. –ñ–¥—É –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ! üï∞Ô∏è")

def get_reminder_phrase():
    return random.choice(soviet_phrases["voice_reminder"])

def check_users_activity():
    for chat_id, data in chat_data.items():
        main_id = data.get('main_id')
        if not main_id:
            continue
        user = data['users'].get(main_id)
        if not user:
            continue
        now = datetime.datetime.now(moscow_tz)
        if user.get('on_break'):
            minutes_on_break = (now - user['break_start_time']).total_seconds() / 60
            if minutes_on_break > BREAK_DURATION_MINUTES and not user.get('reminded'):
                try:
                    phrase = random.choice(soviet_phrases["praise"])
                    bot.send_message(chat_id, f"{user['username']}, {phrase}")
                    user['reminded'] = True
                except Exception as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∫–æ–Ω—Ü–µ –ø–µ—Ä–µ—Ä—ã–≤–∞: {e}")
            continue
        if 'last_voice_time' in user:
            minutes_passed = (now - user['last_voice_time']).total_seconds() / 60
            if minutes_passed > VOICE_TIMEOUT_MINUTES:
                if not user.get('last_remind_time') or (now - user['last_remind_time']).total_seconds() / 60 >= REMIND_EACH_MINUTES:
                    if random.random() < 0.2:
                        phrase = random.choice(soviet_phrases["scary_reminder"])
                    else:
                        phrase = get_reminder_phrase()
                    bot.send_message(chat_id, f"{user['username']}, {phrase}")
                    user['last_remind_time'] = now
            else:
                user['last_remind_time'] = None

@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    if message.chat.id == ADMIN_CHAT_ID:
        return
    welcome_message = random.choice(welcome_phrases)
    bot.reply_to(message, welcome_message)

def get_report_lines(chat_id, data):
    main_id = data.get('main_id')
    users = data.get('users', {})
    main_user = users.get(main_id)
    if not main_user:
        return ["–ì–ª–∞–≤–Ω—ã–π –≤–µ–¥—É—â–∏–π –µ—â—ë –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω."]
    breaks_count = main_user.get('breaks_count', 0)
    late_returns = main_user.get('late_returns', 0)
    said_count = main_user.get('count', 0)
    perc = round(said_count / EXPECTED_VOICES_PER_SHIFT * 100)
    username = main_user.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    report_lines = [
        f"üìã #–û—Ç—á–µ—Ç_–¢–µ–∫—Å—Ç_–í–µ–¥—É—â–µ–≥–æ ({data['shift_start'].strftime('%d.%m.%Y')})",
        f"üè¢ –ß–∞—Ç: {chat_id}",
        f"üé§ –í–µ–¥—É—â–∏–π: {username}",
        f"üó£Ô∏è –í—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤ –≤–µ–¥—É—â–µ–≥–æ: {said_count} –∏–∑ {EXPECTED_VOICES_PER_SHIFT}",
        f"‚òï –ü–µ—Ä–µ—Ä—ã–≤–æ–≤: {breaks_count}",
        f"‚è≥ –ó–∞–¥–µ—Ä–∂–µ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞: {late_returns}",
    ]
    return report_lines

def send_end_of_shift_reports():
    now = datetime.datetime.now(moscow_tz)
    for chat_id, data in chat_data.items():
        report_lines = get_report_lines(chat_id, data)
        main_id = data.get('main_id')
        users = data.get('users', {})
        main_user = users.get(main_id)
        if main_user:
            said_count = main_user.get('count', 0)
            perc = round(said_count / EXPECTED_VOICES_PER_SHIFT * 100)
            if perc >= 80:
                report_lines.append("\n" + random.choice(soviet_phrases["praise"]))
            elif perc >= 50:
                report_lines.append("\n" + random.choice(soviet_phrases["scary_reminder"]))
            else:
                report_lines.append("\n‚ö†Ô∏è –°–º–µ–Ω–∞ –ø—Ä–æ–≤–∞–ª–µ–Ω–∞, —ç—Ñ–∏—Ä –±—ã–ª —Å–ª–∏—à–∫–æ–º —Ç–∏—Ö–∏–º!")
        final_report = "\n".join([line for line in report_lines if line.strip()])
        try:
            bot.send_message(chat_id, final_report)
        except Exception as e:
            logging.error(str(e))
        shift_reports.append({
            "chat_id": chat_id,
            "date": data['shift_start'].strftime("%d.%m.%Y"),
            "report": final_report
        })
    chat_data.clear()

def get_official_conclusion(perc, late_returns):
    if perc >= 100:
        return "–ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é."
    elif perc >= 80:
        return "–ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø—Ä–æ—è–≤–∏–ª –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É."
    elif perc >= 50:
        return "–ü–ª–∞–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è —É–ª—É—á—à–µ–Ω–∏–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
    else:
        return "–ü–ª–∞–Ω –ø—Ä–æ–≤–∞–ª–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏ —Å—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å."

def send_admin_summary():
    if not shift_reports:
        return
    admin_report_phrases = [
        "@nilfts –Ø –≤—Å–µ –ø—Ä–æ –Ω–∏—Ö –∑–Ω–∞—é! üïµÔ∏è‚Äç‚ôÇÔ∏è –í–æ—Ç –∫–∞–∫ –æ–Ω–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏:",
        "@nilfts –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º! –í–æ—Ç —Å–≤–µ–∂–∏–π –æ—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ:",
        "@nilfts –î–æ–∫–ª–∞–¥—ã–≤–∞—é –æ —Ä–∞–±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—ã! –°–º–æ—Ç—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:",
        "@nilfts –ü—Ä–æ–≤–µ—Ä–∏–ª –≤—Å–µ—Ö –∫–∞–∫ –Ω–∞–¥–æ ‚Äî –¥–µ—Ä–∂—É –æ—Ç—á—ë—Ç:",
        "@nilfts –í–Ω–∏–º–∞–Ω–∏–µ! –°–≤–æ–¥–∫–∞ –ø–æ —Å–º–µ–Ω–µ –≥–æ—Ç–æ–≤–∞:",
        "@nilfts –û—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ –∫–∞–∫ –Ω–∞ –ª–∞–¥–æ–Ω–∏! –í–æ—Ç –¥–µ—Ç–∞–ª–∏:",
        "@nilfts –í—Å—ë –∑–∞–ø–∏—Å–∞–ª ‚Äî –≤–æ—Ç –∫–∞–∫ —Ç—Ä—É–¥–∏–ª–∏—Å—å:",
        "@nilfts –í–æ—Ç –∏—Ö –ø–æ–¥–≤–∏–≥–∏ –∑–∞ —Å–º–µ–Ω—É! –°–º–æ—Ç—Ä–∏–º:",
        "@nilfts –û—Ç—á—ë—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ—Å—Ç–µ:",
        "@nilfts –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –≤–æ—Ç –∫–∞–∫ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞–ª–∏:",
    ]
    intro = random.choice(admin_report_phrases)
    report_lines = [intro, ""]
    for item in shift_reports:
        lines = item["report"].splitlines()
        said_count = 0
        expected = EXPECTED_VOICES_PER_SHIFT
        late_returns = 0
        for line in lines:
            if "–í—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤ –≤–µ–¥—É—â–µ–≥–æ" in line:
                try:
                    said_count = int(line.split(":")[1].split("–∏–∑")[0].strip())
                    expected = int(line.split("–∏–∑")[1].strip())
                except Exception:
                    pass
            if "–ó–∞–¥–µ—Ä–∂–µ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞" in line:
                try:
                    late_returns = int(line.split(":")[1].strip())
                except Exception:
                    pass
        perc = round(said_count / expected * 100) if expected else 0
        conclusion = get_official_conclusion(perc, late_returns)
        report_lines.append(item["report"])
        report_lines.append(conclusion)
        report_lines.append("")  # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏
    summary = "\n".join(report_lines)
    try:
        bot.send_message(ADMIN_CHAT_ID, summary, parse_mode="HTML")
    except Exception as e:
        logging.error(f"Admin summary error: {e}")
    shift_reports.clear()

@bot.message_handler(commands=["–æ—Ç—á–µ—Ç", "otchet"])
def send_manual_admin_report(message):
    if message.chat.id == ADMIN_CHAT_ID:
        send_admin_summary()
        bot.reply_to(message, "–û—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É.")
    else:
        send_end_of_shift_reports()
        send_admin_summary()
        bot.reply_to(message, "–û—Ç—á—ë—Ç –ø–æ —Å–º–µ–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —ç—Ç–æ—Ç —á–∞—Ç –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É.")

def run_scheduler():
    schedule.every(1).minutes.do(check_users_activity)
    schedule.every().day.at("01:01").do(send_end_of_shift_reports)
    schedule.every().day.at("09:00").do(send_admin_summary)
    while True:
        schedule.run_pending()
        time.sleep(1)

if __name__ == '__main__':
    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –Ω–∞ —Å–º–µ–Ω–µ... üéôÔ∏è")
    scheduler_thread = threading.Thread(target=run_scheduler)
    scheduler_thread.daemon = True
    scheduler_thread.start()
    while True:
        try:
            bot.polling(none_stop=True, timeout=60, long_polling_timeout=60)
        except Exception as e:
            logging.error(f"Polling exception: {e}")
            time.sleep(10)
