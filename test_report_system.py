#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤
"""

import sys
import os
import logging
import datetime
import pytz

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
from database import db
from models import ShiftData, UserData
from utils import generate_detailed_report
from g_sheets import append_shift_to_google_sheet
from config import TIMEZONE_MAP
import state

def test_report_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–æ–≤."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_database()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–º–µ–Ω—É
    test_chat_id = -1001234567890
    test_user_id = 123456789
    test_username = "test_host"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–º–µ–Ω–∞
    existing_shift = get_shift_by_chat_id(test_chat_id)
    if existing_shift:
        print(f"‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–º–µ–Ω–∞ –≤ —á–∞—Ç–µ {test_chat_id}")
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–º–µ–Ω—É
        success = create_shift(
            chat_id=test_chat_id,
            main_id=test_user_id,
            main_username=test_username,
            shift_goal=15,
            timezone="0"  # –ú–æ—Å–∫–≤–∞
        )
        if success:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Å–º–µ–Ω–∞ –≤ —á–∞—Ç–µ {test_chat_id}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–º–µ–Ω—ã")
            return False
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_success = create_user_shift_data(
        chat_id=test_chat_id,
        user_id=test_user_id,
        username=test_username,
        role="–∫–∞—Ä–∞–æ–∫–µ_–≤–µ–¥—É—â–∏–π"
    )
    print(f"{'‚úÖ' if user_success else '‚ùå'} –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_success}")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    shift_data = ShiftData(
        main_id=test_user_id,
        shift_goal=15,
        shift_start=datetime.datetime.now(pytz.timezone('Europe/Moscow')).isoformat(),
        timezone="0"
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = UserData(username=test_username)
    user_data.count = 12  # 12 –≥–æ–ª–æ—Å–æ–≤—ã—Ö
    user_data.breaks_count = 2  # 2 –ø–µ—Ä–µ—Ä—ã–≤–∞
    user_data.late_returns = 1  # 1 –æ–ø–æ–∑–¥–∞–Ω–∏–µ
    user_data.voice_deltas = [3.5, 4.2, 2.8, 5.1, 3.9]  # –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –º–µ–∂–¥—É –ì–°
    user_data.voice_durations = [25.5, 30.2, 18.7, 22.3, 28.1]  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ì–°
    user_data.recognized_ads = ["–ú–µ–Ω—é", "–ê–∫—Ü–∏—è", "–ú–µ–Ω—é", "–ö–∞—Ä–∞–æ–∫–µ"]  # –¢–µ–º—ã
    
    shift_data.users[test_user_id] = user_data
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state.chat_data[test_chat_id] = shift_data
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å–º–µ–Ω—ã:")
    print(f"   üé§ –í–µ–¥—É—â–∏–π: {user_data.username}")
    print(f"   üìä –ì–æ–ª–æ—Å–æ–≤—ã—Ö: {user_data.count}/{shift_data.shift_goal}")
    print(f"   ‚òï –ü–µ—Ä–µ—Ä—ã–≤–æ–≤: {user_data.breaks_count}")
    print(f"   ‚è∞ –û–ø–æ–∑–¥–∞–Ω–∏–π: {user_data.late_returns}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞
    print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞...")
    try:
        report_lines = generate_detailed_report(test_chat_id, shift_data)
        if report_lines:
            print("‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
            print("=" * 50)
            for line in report_lines:
                print(line)
            print("=" * 50)
        else:
            print("‚ùå –û—Ç—á–µ—Ç –ø—É—Å—Ç–æ–π")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–≥—Ä—É–∑–∫—É –≤ Google Sheets (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≥—Ä—É–∑–∫–∏ –≤ Google Sheets...")
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        from config import GOOGLE_SHEET_KEY, GOOGLE_CREDENTIALS_JSON
        
        if GOOGLE_SHEET_KEY and GOOGLE_CREDENTIALS_JSON:
            print("‚ÑπÔ∏è Google Sheets –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–±—É–µ–º –≤—ã–≥—Ä—É–∑–∫—É...")
            # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            class MockBot:
                def get_chat(self, chat_id):
                    class MockChat:
                        title = f"–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç {chat_id}"
                    return MockChat()
            
            mock_bot = MockBot()
            analytical_conclusion = "–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –Ω–æ—Ä–º–µ"
            
            append_shift_to_google_sheet(mock_bot, test_chat_id, shift_data, analytical_conclusion)
            print("‚úÖ –í—ã–≥—Ä—É–∑–∫–∞ –≤ Google Sheets –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏ –≤ Google Sheets: {e}")
        print("   (–≠—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –µ—Å–ª–∏ Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)")
    
    print("\nüéâ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    return True

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤...")
    success = test_report_generation()
    if success:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –æ—Ç—á–µ—Ç–æ–≤")
        sys.exit(1)
